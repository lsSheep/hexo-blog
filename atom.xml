<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CloudSheep&#39;s Blog</title>
  
  <subtitle>Sheep</subtitle>
  <link href="http://lssheepcloud.cn/atom.xml" rel="self"/>
  
  <link href="http://lssheepcloud.cn/"/>
  <updated>2024-06-18T13:39:00.842Z</updated>
  <id>http://lssheepcloud.cn/</id>
  
  <author>
    <name>sheep</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>部署KeepAlived</title>
    <link href="http://lssheepcloud.cn/2024/06/18/%E9%83%A8%E7%BD%B2KeepAlived/"/>
    <id>http://lssheepcloud.cn/2024/06/18/%E9%83%A8%E7%BD%B2KeepAlived/</id>
    <published>2024-06-18T13:36:00.000Z</published>
    <updated>2024-06-18T13:39:00.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装keepalived所需要的第三方工具"><a href="#安装keepalived所需要的第三方工具" class="headerlink" title="安装keepalived所需要的第三方工具"></a>安装keepalived所需要的第三方工具</h1><p><strong>本次部署专注于构建基于Nginx和Keepalived的高可用集群，已安装的Nginx相关工具将不再重复安装，仅补充构建Keepalived所需的缺失第三方工具</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装libnl-3开发库</span></span><br><span class="line">sudo yum install libnl3-devel libnl3-cli-devel</span><br></pre></td></tr></table></figure><h1 id="下载KeepAlived解压包并解压"><a href="#下载KeepAlived解压包并解压" class="headerlink" title="下载KeepAlived解压包并解压"></a>下载KeepAlived解压包并解压</h1><p><strong>进入官网，根据需求选择所需要的版本进行下载，网址：<a href="https://keepalived.org/download.html">Keepalived for Linux</a></strong></p><p><strong>利用远程终端工具（SecureFX、Xftp等），将下载的解压包上传至服务器的 <code>/opt/nginx</code> 目录中</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入/opt/nginx目录中</span></span><br><span class="line">cd /opt/nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将上传至该目录的keepalived-2.3.1.tar.gz解压包进行解压</span></span><br><span class="line">tar -xvzf keepalived-2.3.1.tar.gz</span><br></pre></td></tr></table></figure><h1 id="安装KeepAlived"><a href="#安装KeepAlived" class="headerlink" title="安装KeepAlived"></a>安装KeepAlived</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在nginx目录下创建一个新的keepalived文件夹，用来存放keepalived安装完成后的文件</span></span><br><span class="line">mkdir /opt/nginx/keepalived</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入解压后得到的文件夹keepalived-2.3.1</span></span><br><span class="line">cd /opt/nginx/keepalived-2.3.1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行脚本程序进行安装</span></span><br><span class="line">./configure/ --prefix=/opt/nginx/keepalived</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行完成后，该文件夹下会多出一个文件--Makefile,可执行以下命令进行编译安装keepalived</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译安装完成后如果显示以下内容，则表示安装完成</span></span><br><span class="line">Use IPVS Framework       : Yes</span><br><span class="line">IPVS use libnl           : Yes</span><br><span class="line">IPVS syncd attributes    : No</span><br><span class="line">IPVS 64 bit stats        : No</span><br><span class="line">HTTP_GET regex support   : No</span><br><span class="line">fwmark socket support    : Yes</span><br><span class="line">Use VRRP Framework       : Yes</span><br><span class="line">Use VRRP VMAC            : Yes</span><br><span class="line">Use VRRP authentication  : Yes</span><br><span class="line">With track_process       : Yes</span><br><span class="line">With linkbeat            : Yes</span><br><span class="line">Use NetworkManager       : No</span><br><span class="line">Use BFD Framework        : No</span><br><span class="line">SNMP vrrp support        : No</span><br><span class="line">SNMP checker support     : No</span><br><span class="line">SNMP RFCv2 support       : No</span><br><span class="line">SNMP RFCv3 support       : No</span><br><span class="line">DBUS support             : No</span><br><span class="line">Use JSON output          : No</span><br><span class="line">libnl version            : 3</span><br><span class="line">Use IPv4 devconf         : No</span><br><span class="line">Use iptables             : No</span><br><span class="line">Use nftables             : No</span><br><span class="line">init type                : systemd</span><br><span class="line">systemd notify           : No</span><br><span class="line">Strict config checks     : No</span><br><span class="line">Build documentation      : No</span><br><span class="line">Default runtime options  : -D</span><br></pre></td></tr></table></figure><blockquote><p><code>WARNING</code>  这是一个警告，可能缺少keepalived所需要的第三方库&#x2F;工具</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装keepalived所需要的第三方工具&quot;&gt;&lt;a href=&quot;#安装keepalived所需要的第三方工具&quot; class=&quot;headerlink&quot; title=&quot;安装keepalived所需要的第三方工具&quot;&gt;&lt;/a&gt;安装keepalived所需要的第三方工具&lt;/</summary>
      
    
    
    
    <category term="负载均衡" scheme="http://lssheepcloud.cn/category/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
    
    <category term="前端" scheme="http://lssheepcloud.cn/tag/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="keepalived" scheme="http://lssheepcloud.cn/tag/keepalived/"/>
    
  </entry>
  
  <entry>
    <title>部署Nginx+KeepAlived高可用集群</title>
    <link href="http://lssheepcloud.cn/2024/06/18/%E9%83%A8%E7%BD%B2Nginx-KeepAlived%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/"/>
    <id>http://lssheepcloud.cn/2024/06/18/%E9%83%A8%E7%BD%B2Nginx-KeepAlived%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</id>
    <published>2024-06-18T13:30:06.000Z</published>
    <updated>2024-06-18T13:38:58.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a><strong>概述</strong></h1><p><strong>前端使用nginx与keepalived构建高可用集群，是一种常见的提升系统稳定性和可靠性的方法。</strong></p><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a><strong>Nginx</strong></h2><p> <strong>是一款高性能的HTTP和反向代理的服务器主要应用于负载均衡和静态内容服务（前端），同时也提供了IAMP&#x2F;SMTP&#x2F;POP3服务。常用于负载均衡和静态内容服务。</strong></p><h2 id="KeepAlived"><a href="#KeepAlived" class="headerlink" title="KeepAlived"></a><strong>KeepAlived</strong></h2><p> <strong>用于监听和故障转移的工具，基于VRRP协议（虚拟路由冗余协议）实现，可以监控服务器的状态，并在主服务器故障时自动切换到备份服务器。主要用于提高服务的高可用性</strong></p><blockquote><p>keepalivd提供了几种不同的冗余方式</p><ul><li>主备模式（master-slave）</li><li>负载均衡模式（load balancing）</li><li>主备负载均衡模式（master-slave load balancing）</li></ul></blockquote><h2 id="双机高可用的方法"><a href="#双机高可用的方法" class="headerlink" title="双机高可用的方法"></a><strong>双机高可用的方法</strong></h2><ul><li><strong>KeepAlived+Nginx双机主从模式</strong></li><li><strong>KeepAlived+Nginx双机主主模式</strong></li></ul><h1 id="Nginx-1"><a href="#Nginx-1" class="headerlink" title="Nginx"></a><strong>Nginx</strong></h1><h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a><strong>正向代理</strong></h2><p> <strong>是帮助内网客户端访问外网服务器的代理方式。在这种模式下，客户端无法直接访问目标服务器，但可以通过一个代理服务器进行访问。</strong></p><ul><li><strong>其主要目的是解决访问限制问题，如绕过地区限制或组织内部的访问限制，访问被封锁的资源。</strong></li></ul><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a><strong>反向代理</strong></h2><p><strong>是把外网客户端的请求转发给内网服务器的代理方式。在这种模式下，客户端并不知道实际提供服务的服务器地址，只与代理服务器进行交互。</strong></p><ul><li><strong>作用目的：一方面是作为负载均衡器，将客户端请求分发到多个后端服务器；另一方面起到安全防护的作用，过滤恶意请求和响应。</strong></li></ul><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a><strong>负载均衡</strong></h2><ul><li><p><strong>负载均衡是将工作负载均匀地分配到多个服务器或网络设备上，以防止任何单一节点过载，从而提高整体系统的可用性和性能。是一种用于在多台服务器之间分配网络流量的技术，旨在优化系统资源利用率、提高服务可用性、增强系统的伸缩性和容错率</strong></p><blockquote><p>工作负载的度量标准：CPU使用率、内存使用率、磁盘I&#x2F;O、网络带宽、并发用户数量、请求率、事物处理器等</p></blockquote></li><li><p><strong>客户端负载均衡：发生在客户端。客户端在发送请求前，根据负载均衡策略（如随机、轮询等）选择一台服务器进行访问，由自己来决定所访问的服务器</strong></p></li><li><p><strong>服务端负载均衡：发生在服务端。通常通过专门的负载均衡器（如Nginx、HAProxy等）接收客户端的请求，然后根据负载均衡算法（如轮询、加权轮询、最少连接等）将请求分发到后端的多台服务器中的一台进行处理。将服务请求发送给目标网站，由目标网站来决定所访问的服务器（Nginx+KeepAlived）</strong></p></li></ul><p><strong>实现负载均衡的方式：HTTP从定向负载均衡、DNS域名解析负载均衡、反向代理负载均衡、IP负载均衡、数据链路层负载均衡、硬件负载均衡器、软件负载均衡器</strong></p><h2 id="Nginx环境搭建"><a href="#Nginx环境搭建" class="headerlink" title="Nginx环境搭建"></a><strong>Nginx环境搭建</strong></h2><h3 id="安装nginx第三方库"><a href="#安装nginx第三方库" class="headerlink" title="安装nginx第三方库"></a>安装nginx第三方库</h3><p><strong>执行以下命令进行安装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ automake pcre pcre-devel zlib zlib-devel openssl openssl-develyum -y install gcc gcc-c++ automake</span><br></pre></td></tr></table></figure><h3 id="下载Nginx解压包并解压"><a href="#下载Nginx解压包并解压" class="headerlink" title="下载Nginx解压包并解压"></a>下载Nginx解压包并解压</h3><ul><li>在官网上直接下载   网址：<a href="http://nginx.org/en/download.html" title="http://nginx.org/en/doload.html">http://nginx.org/en/doload.html</a></li><li>在Linux服务器上下载  <code>wget http://nginx.org/download/nginx-1.26.1.tar.gz</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建nginx目录</span> </span><br><span class="line">mkdir /opt/nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入nginx目录</span></span><br><span class="line">cd /opt/nginx </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载nginx解压包</span>  </span><br><span class="line">wget http://nginx.org/download/nginx-1.26.1.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压文件</span></span><br><span class="line">tar -xzvf nginx-1.26.1.tar.gz</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32625\OneDrive\桌面\架构\前端\image\Nginx部署\1718097294696.png" alt="1718097294696"></p><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">opt/nginx文件夹下创建新文件夹Nginx-1.26.1_install</span></span><br><span class="line">cd /opt/nginx</span><br><span class="line">mkdir nginx-1.26.1_install</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入之前解压后得到的文件夹nginx-1.26.1</span></span><br><span class="line">cd nginx-1.26.1</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行configure脚本程序，可以直接运行./configure,也可以通过--prefix=path 指定nginx的安装目录</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\32625\OneDrive\桌面\架构\前端\image\Nginx部署\1718098976187.png" alt="1718098976187"></p><blockquote><p>conf：该目录存放了Nginx的所有配置文件，该文件夹下包含nginx.conf文件，它是Nginx服务器的住配置文件，其他文件则是用    来配置Nginx的相关功能。</p><p>html：该目录存放了Nginx服务器在运行过程中调用的一些html文件。</p><p>logs：该目录存放了Nginx服务器的日志。</p><p>sbin：该目录中只包含了一个文件-nginx，它就是Nginx服务器的主程序。</p></blockquote><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改nginx.conf文件中的端口，改为81</span></span><br><span class="line">cd /opt/nginx/nginx-1.26.1_install/conf/</span><br><span class="line">vi nginx.conf</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32625\OneDrive\桌面\架构\前端\image\Nginx部署\1718099504595.png" alt="1718099504595"></p><h3 id="启动Nginx服务器"><a href="#启动Nginx服务器" class="headerlink" title="启动Nginx服务器"></a>启动Nginx服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在启动服务器之前，我们可以通过如下指令来查看Nginx服务器配置文件是否有语法错误：</span></span><br><span class="line">/opt/nginx/nginx-1.26.1_install/sbin/nginx -t</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">绝对路径</span></span><br><span class="line">/opt/nginx/nginx-1.26.1_install/sbin/nginx</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在nginx-1.26.1_install文件夹中时的相对路径</span></span><br><span class="line">./sbin/nginx -t</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">通过如下指令可以查看Nginx服务器版本</span></span><br><span class="line">./sbin/nginx -v</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用默认配置启动Nginx</span></span><br><span class="line">./sbin/nginx</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看nginx进程状态</span></span><br><span class="line">ps -ef|grep nginx</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止Nginx服务器</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">绝对路径</span></span><br><span class="line">/opt/nginx/Nginx-1.26.1_install/sbin/nginx -s stop</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Nginx-1.26.1_install文件夹下相对路径</span></span><br><span class="line">./sbin/nginx -s stop</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启Nginx服务器</span></span><br><span class="line">/opt/nginx/Nginx-1.26.1_install/sbin/nginx -s reopen</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新载入配置文件</span></span><br><span class="line">/opt/nginx/Nginx-1.26.1_install/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#需要关闭Linux服务器的防火墙</span><br><span class="line">systemctl stop firewall &amp;&amp;systemctl disbale firewalld</span><br><span class="line">http:192.168.10.100:81</span><br></pre></td></tr></table></figure><h2 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a><strong>虚拟主机</strong></h2><ul><li><strong>一个服务器，多个站点：在nginx的配置中，虚拟主机是一个重要概念，它允许单个nginx服务器为多个域名或IP地址提供服务，而不需要为每个域名或IP地址运行单独的nginx实例</strong></li><li><strong>基于名称的虚拟主机：最常见的虚拟主机是基于服务器名称（通常是域名）的</strong></li></ul><blockquote><p>例如，您可能有一个服务器，它同时为 <code>www.example1.com</code> 和 <code>www.example2.com</code> 提供服务。<code>nginx</code> 根据请求中的 <code>Host</code> 头字段来确定应该将请求路由到哪个虚拟主机</p></blockquote><ul><li><strong>基于 IP 的虚拟主机 ： nginx 也支持基于 IP 地址的虚拟主机。这意味着您可以为每个 IP 地址配置一个独立的虚拟主机</strong></li></ul><blockquote><p>由于 IP 地址的稀缺性和成本，这种配置方式通常不如基于名称的虚拟主机实用</p></blockquote><ul><li><strong>配置文件 ：在 nginx 中，虚拟主机的配置通常位于 nginx.conf 文件中的  serve r块内，或者位于包含在其他位置并由 nginx.conf  引入的单独文件中。每个 server 块代表一个虚拟主机，并包含该虚拟主机的所有配置指令</strong></li><li><strong>资源隔离 ：虽然 nginx 在单个进程中处理所有虚拟主机的请求，但每个虚拟主机都拥有其自己的配置和上下文。这意味着一个虚拟主机的错误或配置问题不会影响其他虚拟主机</strong></li><li><strong>扩展性 ：由于 nginx 的模块化设计，您可以为不同的虚拟主机安装和使用不同的模块，从而根据每个站点的需求进行定制和优化</strong></li></ul><h3 id="虚拟主机配置"><a href="#虚拟主机配置" class="headerlink" title="虚拟主机配置"></a>虚拟主机配置</h3><p>在配置文件 <code>/opt/nginx/nginx-1.26.1_install/conf/nginx.conf</code>中的 <code>server</code>项进行配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打开nginx.conf配置文件</span></span><br><span class="line">vi /opt/nginx/nginx-1.26.1_install/conf/nginx.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找到 server 项进行编辑</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">虚拟主机的配置</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       81;       #该虚拟主机监听的端口</span><br><span class="line">        server_name  caro2o.worfwode.cn;   #虚拟主机监听的域名/ip(此处时基于域名)</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">        #当请求到当前虚拟主机后，映射什么访问路径，/表示映射根路径请求到哪里</span><br><span class="line">        location / &#123;</span><br><span class="line">            root /www/worfcode/caro2o;  #表示访问当前路径时，访问哪个目录中的内容，html表示的是相对路径</span><br><span class="line">            index  index.html;  #当请求路径后面不携带任意文件时，默认访问的文件名（可以只保留一个）</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>可以利用本地hosts文件来使用域名访问</p></blockquote><h2 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a><strong>日志文件</strong></h2><p>存放于nginx的安装目录中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入logs目录中</span></span><br><span class="line">cd /opt/nginx/nginx-1.26.1_install/logs</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看日志文件的内容(最后20条)</span></span><br><span class="line">tail -f -n20 access.log、</span><br></pre></td></tr></table></figure><blockquote><p>每次刷新web网页都会增加一条新的日志记录</p></blockquote><h3 id="日志文件切分"><a href="#日志文件切分" class="headerlink" title="日志文件切分"></a>日志文件切分</h3><p><strong>nginx日志文件的切分是一个重要的管理任务，有助于保持日志文件的清晰和可管理性</strong></p><p><strong>切分方式</strong></p><ul><li><strong>使用logrotate工具切分：</strong></li><li><strong>自定义nginx配置文件实现文件自切分</strong></li></ul><h2 id="Location配置"><a href="#Location配置" class="headerlink" title="Location配置"></a><strong>Location配置</strong></h2><h3 id="location语法规则"><a href="#location语法规则" class="headerlink" title="location语法规则"></a>location语法规则</h3><ul><li><strong>基本语法</strong></li></ul><p><code>location</code> 块的基本语法结构如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location[修饰符] /uri/ &#123;</span><br><span class="line"><span class="meta prompt_">   #</span><span class="language-bash">指令...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>修饰符是是可选的，用于指定匹配方式，如  （<code>=</code> 精确匹配， <code>~</code> 区分大小写的正则匹配， <code>~*</code>不区分大小写的正则匹配，<code>/</code> 通用匹配，任何请求都会匹配得到）</p><p><code>/uri/</code> 是用于匹配请求url的字符串或正则表达式</p></blockquote><ul><li><strong>修饰符说明</strong></li></ul><p><strong>1. 精确匹配 ：使用 <code>=</code> 修饰符，仅当请求 URI 与指定字符串完全相等时匹配</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location = / &#123;  </span><br><span class="line">    # 仅处理根路径/的请求  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. 正则表达式匹配</strong></p><blockquote><p><code>~</code>   区分大小写的正则 表达式匹配</p><p><code>~*</code> 不区分大小写的正则表达式匹配</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location ~ /example/ &#123;  </span><br><span class="line">    # 匹配 http://www.example.com/example/ 但不匹配 http://www.example.com/Example/  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">location ~* /example/ &#123;  </span><br><span class="line">    # 匹配 http://www.example.com/example/ 和 http://www.example.com/Example/  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. 匹配以uri开头</strong></p><p>使用 <code>^~</code> 修饰符，仅当 URI 以指定的字符串开头时匹配（前缀匹配，以XXX开头）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ^~ /img/ &#123;  </span><br><span class="line">    # 匹配所有以 /img/ 开头的 URI  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4. 无修饰符</strong></p><p>默认为前缀匹配，匹配uri的前缀</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /api/ &#123;  </span><br><span class="line">    # 匹配所有以 /api/ 开头的 URI  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>优先级规则</strong></li></ul><blockquote><p>当多个 <code>location</code> 块可能会匹配同一个请求时，Nginx会根据以下规则来确定优先使用哪个 <code>location</code> 块</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 首先检查是否有精确匹配 =</span><br><span class="line"></span><br><span class="line">2. 其次检查是否有以 ^~ 开头的匹配</span><br><span class="line"></span><br><span class="line">3. 接下来按照配置文件中的顺序检查正则表达式的匹配 ~ 或 ~*</span><br><span class="line"></span><br><span class="line">4. 最后是通用匹配 /（没有修饰符的 location块）</span><br></pre></td></tr></table></figure><ul><li><strong>注意事项</strong></li></ul><blockquote><p><code>location</code> 指令必须放在 <code>server</code> 指令中，而不能放在 <code>http</code> 或其他指令中。</p><p><code>location</code> 指令后面必须跟一个大括号 <code>&#123;&#125;</code>，用于包含 <code>location</code> 相关的配置。</p><p>在 <code>location</code> 中可以配置一些特殊的变量，如 <code>$uri</code> 表示当前请求的 URI，<code>$args</code> 表示请求的查询参数等。</p><p><code>location</code> 指令可以与 <code>proxy_pass</code>、<code>fastcgi_pass</code> 等指令结合使用，将请求转发到其他服务器或处理程序中。</p></blockquote><h2 id="反向代理配置"><a href="#反向代理配置" class="headerlink" title="反向代理配置"></a><strong>反向代理配置</strong></h2><ul><li><strong>配置nginx反向代理可以实现负载均衡、缓存静态内容，提升服务器的性能</strong></li><li><strong>配置反向代理可以隐藏后端服务器、SSL&#x2F;STL终止、控制访问，提升安全性</strong></li></ul><p><strong>通过编辑nginx服务器的 <code>nginx.conf</code> 文件来实现反向代理的配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">打开nginx服务器的配置文件进行编辑</span></span><br><span class="line">vi /opt/nginx/nginx-1.26.1_install/conf/nginx.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">以下是一个反向代理的示例</span></span><br><span class="line">server &#123;  </span><br><span class="line">    listen 80;  # 监听80端口（HTTP）  </span><br><span class="line">    server_name example.com;  # 你的域名或IP地址  </span><br><span class="line">  </span><br><span class="line">    location / &#123;  </span><br><span class="line">        proxy_pass http://192.168.10.100:8080/;  # 后端服务器的地址(这里以tomcat服务器为例)  </span><br><span class="line">        proxy_set_header Host $host;  </span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;  </span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  </span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>proxy_pass</code> 用于指定要到代理的后端服务器的地址。可以使用域名&#x2F;IP地址&#x2F;端口等，例如：<code>http:192.168.10.100:8080</code></p><p><code>proxy_set_header</code>用于设置发送到后端服务器的请求头。可以帮助后端服务器识别原始信息的来源（原始信息的IP&#x2F;域名&#x2F;端口号等）</p></blockquote><p><strong>启用配置并验证是否成功</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新加载nginx.conf配置文件</span></span><br><span class="line">/opt/nginx/nginx-1.26.1_install/sbin/nginx -s reload</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用curl命令或者直接在本地服务器上直接访问验证</span></span><br><span class="line">curl http://192.168.10.100/tomcat/test.jsp</span><br></pre></td></tr></table></figure><blockquote><p>如果你的后端服务器支持HTTPS服务，并且你也希望Nginx服务器也能通过HTTPS代理请求，那么你需要配置SSL&#x2F;STL</p></blockquote><h2 id="负载均衡配置"><a href="#负载均衡配置" class="headerlink" title="负载均衡配置"></a>负载均衡配置</h2><p><strong>nginx服务器配置负载均衡何以实现：提高系统性能、增强系统可用性、实现动态扩展、优化资源利用（提升系统资源利用率）、提高安全性、简化管理（便于管理）</strong></p><p><strong>实现nginx服务器的负载均衡配置同样可以利用编辑 <code>conf</code> 目录中的 <code>nginx.conf</code> 文件实现</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在nginx.conf文件中添加一个upstream组到http块中</span></span><br><span class="line">http &#123;  </span><br><span class="line">    upstream tomcats &#123;  </span><br><span class="line">        server 192.168.10.100:8080 weight=1 max_fails=2 fail_timeout=30s;  </span><br><span class="line">        server 192.168.10.100:8090 weight=2 max_fails=2 fail_timeout=30s;  </span><br><span class="line">        server 192.168.1.10 backup;  # 备份服务器  </span><br><span class="line">    &#125;  </span><br><span class="line">    ...  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>weight</code> 用来定义服务器处理请求的权重，默认为1，权重越大收到的请求越多</p><p><code>backup</code> 备份服务器，当其他非备份服务器都不可使用时，才会请求该服务器</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在http块中配置一个或多个server块用于处理传入的请求，需要设置listen指令来监听端口，</span></span><br><span class="line">http &#123;  </span><br><span class="line">    ...  </span><br><span class="line">    server &#123;  </span><br><span class="line">        listen 80;  </span><br><span class="line">        server_name example.com;  # 指定服务器的名称或域名</span><br><span class="line">  </span><br><span class="line">        location / &#123;  </span><br><span class="line">            proxy_pass http://backend_group;  # 使用前面定义的 upstream 组  </span><br><span class="line">            proxy_set_header Host $host;  </span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;  </span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    ...  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>proxy_pass</code> 将匹配的请求代理转发到前面定义的 upstream 组</p><p><code>proxy_set_header</code> 用于修改或添加 HTTP 请求头，以便后端服务器能够正确地处理请求</p></blockquote><p><strong>启用配置并验证是否成功</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新加载nginx.conf配置文件</span></span><br><span class="line">/opt/nginx/nginx-1.26.1_install/sbin/nginx -s reload</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">通过浏览器直接访问所设置的域名或IP地址来验证所配置的负载均衡是否能正常工作</span></span><br></pre></td></tr></table></figure><p><strong>Nginx 提供了多种负载均衡算法，可以根据实际需求选择。常见的算法包括：</strong></p><blockquote><p>轮询（Round Robin）：默认的负载均衡算法，按顺序将请求分发到每个后端服务器。</p><p>加权轮询（Weighted Round Robin）：根据服务器的权重来分发请求，权重越大，接收的请求越多。</p><p>最少连接数（Least Connections）：将请求分配给当前连接数最少的服务器。</p><p>IP 哈希（IP Hash）：根据客户端 IP 的哈希值来分配请求，确保同一个客户端的请求始终被分发到同一台服务器。</p></blockquote><h1 id="KeepAlived实现Nginx高可用"><a href="#KeepAlived实现Nginx高可用" class="headerlink" title="KeepAlived实现Nginx高可用"></a>KeepAlived实现Nginx高可用</h1><p><strong>这里以nginx+keepalived双机主备模式为例</strong></p><p>keepalived实现nginx高可用主要是基于VRRP协议（虚拟路由冗余协议）来实现</p><h2 id="部署KeepAlived"><a href="#部署KeepAlived" class="headerlink" title="部署KeepAlived"></a>部署KeepAlived</h2><h3 id="安装keepalived所需要的第三方工具"><a href="#安装keepalived所需要的第三方工具" class="headerlink" title="安装keepalived所需要的第三方工具"></a>安装keepalived所需要的第三方工具</h3><p><strong>本次部署专注于构建基于Nginx和Keepalived的高可用集群，已安装的Nginx相关工具将不再重复安装，仅补充构建Keepalived所需的缺失第三方工具</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装libnl-3开发库</span></span><br><span class="line">sudo yum install libnl3-devel libnl3-cli-devel</span><br></pre></td></tr></table></figure><h3 id="下载KeepAlived解压包并解压"><a href="#下载KeepAlived解压包并解压" class="headerlink" title="下载KeepAlived解压包并解压"></a>下载KeepAlived解压包并解压</h3><p><strong>进入官网，根据需求选择所需要的版本进行下载，网址：<a href="https://keepalived.org/download.html">Keepalived for Linux</a></strong></p><p><strong>利用远程终端工具（SecureFX、Xftp等），将下载的解压包上传至服务器的 <code>/opt/nginx</code> 目录中</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入/opt/nginx目录中</span></span><br><span class="line">cd /opt/nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将上传至该目录的keepalived-2.3.1.tar.gz解压包进行解压</span></span><br><span class="line">tar -xvzf keepalived-2.3.1.tar.gz</span><br></pre></td></tr></table></figure><h3 id="安装KeepAlived"><a href="#安装KeepAlived" class="headerlink" title="安装KeepAlived"></a>安装KeepAlived</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在nginx目录下创建一个新的keepalived文件夹，用来存放keepalived安装完成后的文件</span></span><br><span class="line">mkdir /opt/nginx/keepalived</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入解压后得到的文件夹keepalived-2.3.1</span></span><br><span class="line">cd /opt/nginx/keepalived-2.3.1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行脚本程序进行安装</span></span><br><span class="line">./configure/ --prefix=/opt/nginx/keepalived</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行完成后，该文件夹下会多出一个文件--Makefile,可执行以下命令进行编译安装keepalived</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译安装完成后如果显示以下内容，则表示安装完成</span></span><br><span class="line">Use IPVS Framework       : Yes</span><br><span class="line">IPVS use libnl           : Yes</span><br><span class="line">IPVS syncd attributes    : No</span><br><span class="line">IPVS 64 bit stats        : No</span><br><span class="line">HTTP_GET regex support   : No</span><br><span class="line">fwmark socket support    : Yes</span><br><span class="line">Use VRRP Framework       : Yes</span><br><span class="line">Use VRRP VMAC            : Yes</span><br><span class="line">Use VRRP authentication  : Yes</span><br><span class="line">With track_process       : Yes</span><br><span class="line">With linkbeat            : Yes</span><br><span class="line">Use NetworkManager       : No</span><br><span class="line">Use BFD Framework        : No</span><br><span class="line">SNMP vrrp support        : No</span><br><span class="line">SNMP checker support     : No</span><br><span class="line">SNMP RFCv2 support       : No</span><br><span class="line">SNMP RFCv3 support       : No</span><br><span class="line">DBUS support             : No</span><br><span class="line">Use JSON output          : No</span><br><span class="line">libnl version            : 3</span><br><span class="line">Use IPv4 devconf         : No</span><br><span class="line">Use iptables             : No</span><br><span class="line">Use nftables             : No</span><br><span class="line">init type                : systemd</span><br><span class="line">systemd notify           : No</span><br><span class="line">Strict config checks     : No</span><br><span class="line">Build documentation      : No</span><br><span class="line">Default runtime options  : -D</span><br></pre></td></tr></table></figure><blockquote><p><code>WARNING</code>  这是一个警告，可能缺少keepalived所需要的第三方库&#x2F;工具</p></blockquote><h2 id="编写shell脚本监听nginx是否存活"><a href="#编写shell脚本监听nginx是否存活" class="headerlink" title="编写shell脚本监听nginx是否存活"></a>编写shell脚本监听nginx是否存活</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在keepalived目录下创建nginx_check.sh脚本文件</span></span><br><span class="line">touch /opt/nginx/keepalived/nginx_check.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑nginx_check.sh脚本文件</span></span><br><span class="line">mv /opt/nginx/keepalaved/nginx_check.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">A=$(ps -C nginx --no-header | wc -l)  #检查正在运行的nginx进程数量</span><br><span class="line"></span><br><span class="line">if [ &quot;$A&quot; -eq 0 ]; then               #如果nginx没有运行，则启动它</span><br><span class="line">    /opt/nginx/nginx-1.26.1_install/sbin/nginx</span><br><span class="line">    sleep 2</span><br><span class="line">    B=$(ps -C nginx --no-header | wc -l)     #再次检查nginx是否启动成功</span><br><span class="line">    if [ &quot;$B&quot; -eq 0 ]; then</span><br><span class="line">        echo &quot;Nginx failed to start, killing keepalived.&quot;</span><br><span class="line">        killall keepalived</span><br><span class="line">    else</span><br><span class="line">        echo &quot;Nginx started successfully.&quot;</span><br><span class="line">    fi</span><br><span class="line">else</span><br><span class="line">    echo &quot;Nginx is already running.&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>赋予 <code>nginx_check.sh</code>脚本文件可执行权限</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /opt/nginx/keepalived/nginx_check.sh</span><br></pre></td></tr></table></figure><h2 id="配置Master节点"><a href="#配置Master节点" class="headerlink" title="配置Master节点"></a>配置Master节点</h2><p><strong>修改master节点的 <code>keepalived.conf</code> 文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将keepalived.conf文件内的内容替换为以下内容</span></span><br><span class="line"></span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id wolfcode     #路由器标志</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">集群资源监控，组合track_script进行</span></span><br><span class="line">vrrp_script check_haproxy &#123;</span><br><span class="line">        script &quot;/opt/nginx/keepalived/nginx_check.sh&quot;  #检测nginx状态的脚本路径</span><br><span class="line">        interval 2  #检测时间间隔</span><br><span class="line">        weight -20  #若条件成立，权重减20</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance PROXY &#123;</span><br><span class="line">        #设置当前主机为主节点，备用节点设置为BACKUP</span><br><span class="line">        state MASTER</span><br><span class="line">        #指定HA监测网络接口</span><br><span class="line">        interface ens32</span><br><span class="line">        #虚拟路由标识，同一个VRRP实例要使用同一个标识，主备机</span><br><span class="line">        virtual_router_id 80</span><br><span class="line">        #主节点时，内容为：</span><br><span class="line">        unicast_src_ip 192.168.10.100</span><br><span class="line">        #设置优先级，确保主节点的优先级高过备用节点</span><br><span class="line">        priority 100</span><br><span class="line">        #用于设定主备节点时间同步检查时间间隔</span><br><span class="line">        advert_int 2</span><br><span class="line">        #设置主备节点间的通信验证类型及密码，同一个VRRP实例中必须一致</span><br><span class="line">        authentication &#123;</span><br><span class="line">                 auth_type PASS</span><br><span class="line">                 auth_pass wolfcode</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        #集群资源监控，组合vrrp_script进行</span><br><span class="line">        track_script &#123;</span><br><span class="line">                check_haproxy</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        virtual_ipaddress &#123;</span><br><span class="line">                 192.168.10.200   #设置一个虚拟IP进行访问</span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>配置完成后需要刷新keepalived配置并启动：<code>/opt/nginx/keepalived/sbin/keepalived -s reload</code></p></blockquote><h2 id="配置Selave节点"><a href="#配置Selave节点" class="headerlink" title="配置Selave节点"></a>配置Selave节点</h2><p><strong>修改slave节点的 <code>keepalived.conf</code> 文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将 keepalived.conf 文件的内容替换为以下内容</span></span><br><span class="line"></span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id wolfcode     #路由器标志</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">集群资源监控，组合track_script进行</span></span><br><span class="line">vrrp_script check_haproxy &#123;</span><br><span class="line">        script &quot;/opt/nginx/keepalived/nginx_check.sh&quot;  #检测nginx状态的脚本路径</span><br><span class="line">        interval 2  #检测时间间隔</span><br><span class="line">        weight -20  #若条件成立，权重减20</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance PROXY &#123;</span><br><span class="line">        #设置当前主机为备节点，主节点设置为MASTER</span><br><span class="line">        state BACKUP</span><br><span class="line">        #指定HA监测网络接口</span><br><span class="line">        interface ens32</span><br><span class="line">        #虚拟路由标识，同一个VRRP实例要使用同一个标识，主备机</span><br><span class="line">        virtual_router_id 80</span><br><span class="line">        #备节点时，内容为：</span><br><span class="line">        unicast_src_ip 192.168.10.101</span><br><span class="line">        #设置优先级，确保主节点的优先级高过备用节点</span><br><span class="line">        priority 90</span><br><span class="line">        #用于设定主备节点时间同步检查时间间隔</span><br><span class="line">        advert_int 2</span><br><span class="line">        #设置主备节点间的通信验证类型及密码，同一个VRRP实例中必须一致</span><br><span class="line">        authentication &#123;</span><br><span class="line">                 auth_type PASS</span><br><span class="line">                 auth_pass wolfcode</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        #集群资源监控，组合vrrp_script进行</span><br><span class="line">        track_script &#123;</span><br><span class="line">                check_haproxy</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        virtual_ipaddress &#123;</span><br><span class="line">                 192.168.10.200   #设置一个虚拟IP进行访问</span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>配置完成后需要刷新keepalived配置并启动：<code>/opt/nginx/keepalived/sbin/keepalived -s reload</code></p></blockquote><h1 id="Nginx高可用测试"><a href="#Nginx高可用测试" class="headerlink" title="Nginx高可用测试"></a>Nginx高可用测试</h1><p><strong>可将master节点关闭，并在selave节点上利用 <code>ip addr</code> 命令进行验证，如果出现了配置文件中所配置的虚拟IP，则表示配置成功</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;前端使用nginx与keepalived构建高可用集群，是一种常见的提升系统稳定性和可靠性</summary>
      
    
    
    
    <category term="负载均衡" scheme="http://lssheepcloud.cn/category/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
    
    <category term="前端" scheme="http://lssheepcloud.cn/tag/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="nginx" scheme="http://lssheepcloud.cn/tag/nginx/"/>
    
    <category term="keepalived" scheme="http://lssheepcloud.cn/tag/keepalived/"/>
    
  </entry>
  
  <entry>
    <title>部署Tomcat</title>
    <link href="http://lssheepcloud.cn/2024/06/15/%E9%83%A8%E7%BD%B2Tomcat/"/>
    <id>http://lssheepcloud.cn/2024/06/15/%E9%83%A8%E7%BD%B2Tomcat/</id>
    <published>2024-06-15T12:31:18.000Z</published>
    <updated>2024-06-18T13:41:05.236Z</updated>
    
    <content type="html"><![CDATA[<h1 id="部署准备"><a href="#部署准备" class="headerlink" title="部署准备"></a>部署准备</h1><h2 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h2><p>由于tomcat是基于Java的应用服务器，所以在安装tomcat之前，需要在Linux服务器上部署Java环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更新yum源</span></span><br><span class="line">yum unpate</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载openJDK（可根据需求选择不同版本）</span></span><br><span class="line">sudo yum install java-11-openjdk-devel</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证是否安装完成</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h1 id="部署tomcat"><a href="#部署tomcat" class="headerlink" title="部署tomcat"></a>部署tomcat</h1><h2 id="下载tomcat解压包"><a href="#下载tomcat解压包" class="headerlink" title="下载tomcat解压包"></a>下载tomcat解压包</h2><ul><li>进如tomcat官网 <code>https://tomcat.apache.org/</code> 选择所需要的版本进行下载</li></ul><blockquote><p>下载完成后，利用远程终端工具将下载的解压包上传至Linux服务器中</p></blockquote><ul><li>利用Linux服务器的 <code>wget</code> 命令直接下载（根据需求选择不同版本进行下载，这里以 <code>tomcat-9.0.89</code> 为例</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用wget命令下载tomcat</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.89/bin/apache-tomcat-9.0.89.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建目录存放tomcat解压后的文件</span></span><br><span class="line">mkdir /opt/tomcat</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">解压tomcat</span></span><br><span class="line">tar -xzf apache-tomcat-9.0.89.tar.gzq -C /opt/tomcat</span><br></pre></td></tr></table></figure><h2 id="配置运行环境（可选）"><a href="#配置运行环境（可选）" class="headerlink" title="配置运行环境（可选）"></a>配置运行环境（可选）</h2><p>为了方便使用可以将tomcat的  <code>bin</code> 目录添加到系统的 <code>PATH</code> 环境变量中，可以通过编辑 <code>.bashrc</code> 文件实现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入.bashrc文件进行编辑</span></span><br><span class="line">vi /root/.bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加以下内容</span></span><br><span class="line">export CATALINA_HOME=/opt/tomcat  </span><br><span class="line">export PATH=$CATALINA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><h2 id="运行、停止tomcat"><a href="#运行、停止tomcat" class="headerlink" title="运行、停止tomcat"></a>运行、停止tomcat</h2><p>运行tomcat  <code>bin</code> 目录下的 <code>startup.sh</code> 脚本文件启动tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">./startup.sh </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示以下内容表示tomcat启动成功</span></span><br><span class="line">Using CATALINA_BASE:   /opt/tomcat/apache-tomcat-9.0.89</span><br><span class="line">Using CATALINA_HOME:   /opt/tomcat/apache-tomcat-9.0.89</span><br><span class="line">Using CATALINA_TMPDIR: /opt/tomcat/apache-tomcat-9.0.89/temp</span><br><span class="line">Using JRE_HOME:        /usr</span><br><span class="line">Using CLASSPATH:       /opt/tomcat/apache-tomcat-9.0.89/bin/bootstrap.jar:/opt/tomcat/apache-tomcat-9.0.89/bin/tomcat-juli.jar</span><br><span class="line">Using CATALINA_OPTS:   </span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure><p>运行tomcat  <code>bin</code> 目录下的 <code>shutdown.sh</code> 脚本文件关闭tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">。/shutdown.sh</span><br></pre></td></tr></table></figure><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>在主机浏览器中输入 <code>https://&lt;服务器主机IP&gt;:8080</code> 进行验证（tomcat服务器默认端口为8080，若需要使用其他端口号可以编辑tomcat配置文件 <code>server.xml</code> 进行修改）</p><p><img src="C:\Users\32625\AppData\Roaming\Typora\typora-user-images\image-20240614191758558.png" alt="image-20240614191758558"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;部署准备&quot;&gt;&lt;a href=&quot;#部署准备&quot; class=&quot;headerlink&quot; title=&quot;部署准备&quot;&gt;&lt;/a&gt;部署准备&lt;/h1&gt;&lt;h2 id=&quot;安装Java&quot;&gt;&lt;a href=&quot;#安装Java&quot; class=&quot;headerlink&quot; title=&quot;安装Jav</summary>
      
    
    
    
    
    <category term="tomcat" scheme="http://lssheepcloud.cn/tag/tomcat/"/>
    
    <category term="Java" scheme="http://lssheepcloud.cn/tag/Java/"/>
    
  </entry>
  
  <entry>
    <title>Nginx虚拟主机的配置</title>
    <link href="http://lssheepcloud.cn/2024/06/14/Nginx%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>http://lssheepcloud.cn/2024/06/14/Nginx%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E7%9A%84%E9%85%8D%E7%BD%AE/</id>
    <published>2024-06-14T08:35:53.000Z</published>
    <updated>2024-06-18T13:40:07.072Z</updated>
    
    <content type="html"><![CDATA[<p><strong>在nginx的配置中，虚拟主机是一个重要概念，它允许单个nginx服务器为多个域名或IP地址提供服务，而不需要为每个域名或IP地址运行单独的nginx实例</strong></p><h1 id="创建项目路径"><a href="#创建项目路径" class="headerlink" title="创建项目路径"></a>创建项目路径</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在根目录下创建统一项目路径 /www/worfcode</span></span><br><span class="line">cd /</span><br><span class="line">mkdir www</span><br><span class="line">cd  www/</span><br><span class="line">mkdir worfcode</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在worfcode中创建两个项目路径：项目一 caro2o/index.html、项目二 worf2w/index.html</span></span><br><span class="line">cd /www/worfcode</span><br><span class="line">mkdir &#123;caro2o,worf2w&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在在项目一、项目二中的文件index.html中添加内容</span></span><br><span class="line">echo &#x27;&lt;h1&gt;CARO2O:Project I&lt;h1&gt;&#x27; &gt;index.html   #项目一</span><br><span class="line">echo &#x27;&lt;h1&gt;WORF2W:Project II&lt;h1&gt;&#x27; &gt;index.html  #项目二</span><br></pre></td></tr></table></figure><h1 id="虚拟主机配置"><a href="#虚拟主机配置" class="headerlink" title="虚拟主机配置"></a>虚拟主机配置</h1><p>在配置文件 <code>/opt/nginx/nginx-1.26.1_install/conf/nginx.conf</code>中的 <code>server</code>项进行配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打开nginx.conf配置文件</span></span><br><span class="line">vi /opt/nginx/nginx-1.26.1_install/conf/nginx.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找到 server 项进行编辑</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">虚拟主机的配置</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       81;       #该虚拟主机监听的端口</span><br><span class="line">        server_name  caro2o.worfwode.cn;   #虚拟主机监听的域名/ip(此处时基于域名)</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">        #当请求到当前虚拟主机后，映射什么访问路径，/表示映射根路径请求到哪里</span><br><span class="line">        location / &#123;</span><br><span class="line">            root /www/worfcode/caro2o;  #表示访问当前路径时，访问哪个目录中的内容，html表示的是相对路径</span><br><span class="line">            index  index.html;  #当请求路径后面不携带任意文件时，默认访问的文件名（可以只保留一个）</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>可以利用本地hosts文件来使用域名访问</p><p>根据上述配置可创建多台虚拟主机</p></blockquote><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p><img src="C:\Users\32625\AppData\Roaming\Typora\typora-user-images\image-20240612152931067.png" alt="image-20240612152931067"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;在nginx的配置中，虚拟主机是一个重要概念，它允许单个nginx服务器为多个域名或IP地址提供服务，而不需要为每个域名或IP地址运行单独的nginx实例&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;创建项目路径&quot;&gt;&lt;a href=&quot;#创建项目路径&quot; clas</summary>
      
    
    
    
    
    <category term="nginx进阶" scheme="http://lssheepcloud.cn/tag/nginx%E8%BF%9B%E9%98%B6/"/>
    
    <category term="前端" scheme="http://lssheepcloud.cn/tag/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>架构</title>
    <link href="http://lssheepcloud.cn/2024/06/14/%E6%9E%B6%E6%9E%84%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/"/>
    <id>http://lssheepcloud.cn/2024/06/14/%E6%9E%B6%E6%9E%84%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/</id>
    <published>2024-06-14T08:25:20.000Z</published>
    <updated>2024-06-14T08:34:40.329Z</updated>
    
    <content type="html"><![CDATA[<h1 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h1><h2 id="前端（ngnix-Keepalived高可用集群）"><a href="#前端（ngnix-Keepalived高可用集群）" class="headerlink" title="前端（ngnix+Keepalived高可用集群）"></a>前端（ngnix+Keepalived高可用集群）</h2><p>看得见的页面（小程序，web网页，app)可以单独存在，把后端处理好的数据进行处理展示出来</p><p>静态页面：页面被写死</p><p>语言：Java，HTML，CSS，C++等</p><p>前端代码可以存放于任何有网且能够连接到后端数据库的地方（有些情况可能会限制），如：app，浏览器等，运行于客户端</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>一个工具，调用后端的动态数据到前端的静态页面</p><h2 id="后端（python-MD-Redis）"><a href="#后端（python-MD-Redis）" class="headerlink" title="后端（python+MD+Redis）"></a>后端（python+MD+Redis）</h2><p>存放数据，给页面（前端）提供数据，调用数据库，把处理好的数据返回给前端</p><p>语言：Java，PHP，python，GO等</p><p>后端代码只能存放于服务器，运行于服务器，如：SQL，Redis等</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;架构&quot;&gt;&lt;a href=&quot;#架构&quot; class=&quot;headerlink&quot; title=&quot;架构&quot;&gt;&lt;/a&gt;架构&lt;/h1&gt;&lt;h2 id=&quot;前端（ngnix-Keepalived高可用集群）&quot;&gt;&lt;a href=&quot;#前端（ngnix-Keepalived高可用集群）&quot; c</summary>
      
    
    
    
    
    <category term="架构" scheme="http://lssheepcloud.cn/tag/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Nginx部署</title>
    <link href="http://lssheepcloud.cn/2024/06/14/Nginx%E9%83%A8%E7%BD%B2/"/>
    <id>http://lssheepcloud.cn/2024/06/14/Nginx%E9%83%A8%E7%BD%B2/</id>
    <published>2024-06-14T08:24:58.000Z</published>
    <updated>2024-06-18T13:40:30.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装nginx第三方库"><a href="#安装nginx第三方库" class="headerlink" title="安装nginx第三方库"></a>安装nginx第三方库</h1><p><strong>执行以下命令进行安装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ automake pcre pcre-devel zlib zlib-devel openssl openssl-develyum -y install gcc gcc-c++ automake</span><br></pre></td></tr></table></figure><h1 id="下载Nginx解压包并解压"><a href="#下载Nginx解压包并解压" class="headerlink" title="下载Nginx解压包并解压"></a>下载Nginx解压包并解压</h1><ul><li>在官网上直接下载   网址：<a href="http://nginx.org/en/download.html" title="http://nginx.org/en/doload.html">http://nginx.org/en/doload.html</a></li><li>在Linux服务器上下载  <code>wget http://nginx.org/download/nginx-1.26.1.tar.gz</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建nginx目录</span> </span><br><span class="line">mkdir /opt/nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入nginx目录</span></span><br><span class="line">cd /opt/nginx </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载nginx解压包</span>  </span><br><span class="line">wget http://nginx.org/download/nginx-1.26.1.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压文件</span></span><br><span class="line">tar -xvf nginx-1.26.1.tar.gz</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32625\OneDrive\桌面\架构\前端\image\Nginx部署\1718097294696.png" alt="1718097294696"></p><h1 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">opt/nginx文件夹下创建新文件夹Nginx-1.26.1_install</span></span><br><span class="line">cd /opt/nginx</span><br><span class="line">mkdir nginx-1.26.1_install</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入之前解压后得到的文件夹nginx-1.26.1</span></span><br><span class="line">cd nginx-1.26.1</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行configure脚本程序，可以直接运行./configure,也可以通过--prefix=path 指定nginx的安装目录</span></span><br><span class="line">./configure --prefix=/opt/nginx/nginx-1.26.1_install</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行完成后,该文件夹下多出一个文件---Makefile，此时执行make指令进行源代码编译，编译过程中屏幕会有编译全过程</span></span><br><span class="line">make</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译完成后，执行make的install命令安装Nginx服务器</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32625\OneDrive\桌面\架构\前端\image\Nginx部署\1718098976187.png" alt="1718098976187"></p><blockquote><p>conf：该目录存放了Nginx的所有配置文件，该文件夹下包含nginx.conf文件，它是Nginx服务器的住配置文件，其他文件则是用    来配置Nginx的相关功能。</p><p>html：该目录存放了Nginx服务器在运行过程中调用的一些html文件。</p><p>logs：该目录存放了Nginx服务器的日志。</p><p>sbin：该目录中只包含了一个文件-nginx，它就是Nginx服务器的主程序。</p></blockquote><h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改nginx.conf文件中的端口，改为81</span></span><br><span class="line">cd /opt/nginx/nginx-1.26.1_install/conf/</span><br><span class="line">vi nginx.conf</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32625\OneDrive\桌面\架构\前端\image\Nginx部署\1718099504595.png" alt="1718099504595"></p><h1 id="启动Nginx服务器"><a href="#启动Nginx服务器" class="headerlink" title="启动Nginx服务器"></a>启动Nginx服务器</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#在启动服务器之前，我们可以通过如下指令来查看Nginx服务器配置文件是否有语法错误：</span><br><span class="line">/opt/nginx/nginx-1.26.1_install/sbin/nginx -t</span><br><span class="line"></span><br><span class="line">#绝对路径</span><br><span class="line">/opt/nginx/nginx-1.26.1_install/sbin/nginx</span><br><span class="line"> </span><br><span class="line">#在nginx-1.26.1_install文件夹中时的相对路径</span><br><span class="line">./sbin/nginx -t</span><br><span class="line"> </span><br><span class="line">#通过如下指令可以查看Nginx服务器版本</span><br><span class="line">./sbin/nginx -v</span><br><span class="line"> </span><br><span class="line">#使用默认配置启动Nginx</span><br><span class="line">./sbin/nginx</span><br><span class="line"> </span><br><span class="line">#查看nginx进程状态</span><br><span class="line">ps -ef|grep nginx</span><br><span class="line"> </span><br><span class="line">#停止Nginx服务器</span><br><span class="line">#绝对路径</span><br><span class="line">/opt/nginx/Nginx-1.26.1_install/sbin/nginx -s stop</span><br><span class="line"> </span><br><span class="line">#Nginx-1.26.1_install文件夹下相对路径</span><br><span class="line">./sbin/nginx -s stop</span><br><span class="line"> </span><br><span class="line">#重启Nginx服务器</span><br><span class="line">/opt/nginx/Nginx-1.26.1_install/sbin/nginx -s reopen</span><br><span class="line"> </span><br><span class="line">#重新载入配置文件</span><br><span class="line">/opt/nginx/Nginx-1.26.1_install/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#需要关闭Linux服务器的防火墙</span><br><span class="line">systemctl stop firewall &amp;&amp;systemctl disbale firewalld</span><br><span class="line">http:192.168.10.100:81</span><br></pre></td></tr></table></figure><p><img src="/image/Nginx%E9%83%A8%E7%BD%B2/1718100327425.png" alt="1718100327425"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装nginx第三方库&quot;&gt;&lt;a href=&quot;#安装nginx第三方库&quot; class=&quot;headerlink&quot; title=&quot;安装nginx第三方库&quot;&gt;&lt;/a&gt;安装nginx第三方库&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;执行以下命令进行安装&lt;/strong&gt;&lt;/p&gt;
&lt;f</summary>
      
    
    
    
    <category term="负载均衡" scheme="http://lssheepcloud.cn/category/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
    
    <category term="前端" scheme="http://lssheepcloud.cn/tag/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="nginx" scheme="http://lssheepcloud.cn/tag/nginx/"/>
    
  </entry>
  
  <entry>
    <title>ceph</title>
    <link href="http://lssheepcloud.cn/2024/03/11/ceph/"/>
    <id>http://lssheepcloud.cn/2024/03/11/ceph/</id>
    <published>2024-03-11T01:39:09.000Z</published>
    <updated>2024-06-14T08:29:12.711Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ceph版本来源介绍"><a href="#Ceph版本来源介绍" class="headerlink" title="Ceph版本来源介绍"></a>Ceph版本来源介绍</h1><p><strong>第一个 Ceph 版本是 0.1 ，要回溯到 2008 年 1 月。多年来，版本号方案一直没变，直到 2015 年 4 月 0.94.1 （ Hammer 的第一个修正版）发布后，为了避免 0.99 （以及 0.100 或 1.00 ？），制定了新策略。</strong></p><p><strong>x.0.z - 开发版（给早期测试者和勇士们）</strong></p><p><strong>x.1.z - 候选版（用于测试集群、高手们）</strong></p><p><strong>x.2.z - 稳定、修正版（给用户们）</strong></p><p><strong>x 将从 9 算起，它代表 Infernalis （ I 是第九个字母），这样第九个发布周期的第一个开发版就是 9.0.0 ；后续的开发版依次是 9.0.1 、 9.0.2 等等。</strong></p><table><thead><tr><th>版本名称</th><th>版本号</th><th>发布时间</th></tr></thead><tbody><tr><td>Argonaut</td><td>0.48版本(LTS)</td><td>2012年6月3日</td></tr><tr><td>Bobtail</td><td>0.56版本(LTS)</td><td>2013年5月7日</td></tr><tr><td>Cuttlefish</td><td>0.61版本</td><td>2013年1月1日</td></tr><tr><td>Dumpling</td><td>0.67版本(LTS)</td><td>2013年8月14日</td></tr><tr><td>Emperor</td><td>0.72版本</td><td>2013年11月9</td></tr><tr><td>Firefly</td><td>0.80版本(LTS)</td><td>2014年5月</td></tr><tr><td>Giant</td><td>Giant</td><td>October 2014 - April 2015</td></tr><tr><td>Hammer</td><td>Hammer</td><td>April 2015 - November 2016</td></tr><tr><td>Infernalis</td><td>Infernalis</td><td>November 2015 - June 2016</td></tr><tr><td>Jewel</td><td>10.2.9</td><td>2016年4月</td></tr><tr><td>Kraken</td><td>11.2.1</td><td>2017年10月</td></tr><tr><td>Luminous</td><td>12.2.12</td><td>2017年10月</td></tr><tr><td>mimic</td><td>13.2.7</td><td>2018年5月</td></tr><tr><td>nautilus</td><td>14.2.5</td><td>2019年2月</td></tr><tr><td>Octopus</td><td>15.2.17</td><td>2020-03-23</td></tr><tr><td>Pacific</td><td>16.2.15</td><td>2021-03-31</td></tr><tr><td>Quincy</td><td>17.2.7</td><td>2022-04-19</td></tr><tr><td>Reef</td><td>18.2.1</td><td>2023-08-07</td></tr></tbody></table><p><strong>根据<a href="https://docs.ceph.com/en/latest/releases/">官网</a>给出的消息目前从O版开始(包括O版)之前的版本都不会再进行维护更新</strong></p><h1 id="安装方式介绍"><a href="#安装方式介绍" class="headerlink" title="安装方式介绍"></a>安装方式介绍</h1><p> <strong><a href="https://docs.ceph.com/ceph-ansible/">ceph-ansible</a> : 部署和管理 使用 Ansible 的 Ceph 集群。</strong></p><ul><li><strong>ceph-ansible 被广泛部署。</strong></li><li><strong>ceph-ansible 未与 在 Nautilus 和 Octopus 中引入，这意味着管理功能 而 Nautilus 和 Octopus 中引入的仪表板集成则不是 在通过 ceph-ansible 部署的 Ceph 集群中可用。</strong></li></ul><p> <strong><a href="https://docs.ceph.com/projects/ceph-deploy/en/latest/">ceph-deploy</a> : 是一个 可用于快速部署集群的工具。</strong></p><p> <strong><a href="https://docs.ceph.com/en/latest/cephadm/install/#cephadm-deploying-new-cluster">Cephadm</a> : 是一种可用于 安装和管理 Ceph 集群。(它不支持 RHEL8、CentOS 8 或更高版本的操作 系统。)</strong></p><ul><li><strong>cephadm 只支持 Octopus 及更新版本。</strong></li><li><strong>cephadm 与编排 API 完全集成，并完全支持 用于管理集群部署的 CLI 和仪表板功能。</strong></li><li><strong>cephadm 需要容器支持（以 Podman 或 Docker 的形式）和 Python 3.</strong></li><li><strong>cephadm 需要 systemd。</strong></li></ul><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="准备四台台虚拟机"><a href="#准备四台台虚拟机" class="headerlink" title="准备四台台虚拟机"></a><strong>准备四台台虚拟机</strong></h2><table><thead><tr><th>主机名</th><th>IP地址</th><th>配置</th></tr></thead><tbody><tr><td>center</td><td>192.168.10.100</td><td>2核2G +20g</td></tr><tr><td>ceph-node1</td><td>192.168.10.11</td><td>2核2G +20g+30g+30g+30g(临时)</td></tr><tr><td>ceph-node2</td><td>192.168.10.12</td><td>2核2G +20g+30g+30g+30g(临时)</td></tr><tr><td>ceph-noded3</td><td>192.168.10.13</td><td>2核2G +20g+30g+30g+30g(临时)</td></tr></tbody></table><h3 id="关闭防火墙，seliunx"><a href="#关闭防火墙，seliunx" class="headerlink" title="关闭防火墙，seliunx"></a>关闭防火墙，seliunx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; systemctl disable firewalld &amp;&amp; setenforce 0</span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config</span><br></pre></td></tr></table></figure><h3 id="修改主机名，主机映射"><a href="#修改主机名，主机映射" class="headerlink" title="修改主机名，主机映射"></a>修改主机名，主机映射</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">四台虚拟机分别执行</span></span><br><span class="line">hostnamectl set-hostname center</span><br><span class="line">hostnamectl set-hostname ceph-1</span><br><span class="line">hostnamectl set-hostname ceph-2</span><br><span class="line">hostnamectl set-hostname ceph-3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">主机映射</span></span><br><span class="line">cat &gt;&gt;/etc/hosts &lt;&lt;EOF</span><br><span class="line">192.168.10.100 center</span><br><span class="line">192.168.10.11 ceph-1</span><br><span class="line">192.168.10.12 ceph-2</span><br><span class="line">192.168.10.13 ceph-3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="配置ntp服务器同步时间"><a href="#配置ntp服务器同步时间" class="headerlink" title="配置ntp服务器同步时间"></a>配置ntp服务器同步时间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp       #安装ntp</span><br><span class="line"></span><br><span class="line">vi /etc/ntp.conf         #编辑配置文件(ceph-1 ceph-2 ceph-3 节点)</span><br><span class="line">server center iburst     #添加的内容(将原来的注释掉)</span><br><span class="line"></span><br><span class="line">systemctl restart ntpd   #重启</span><br><span class="line">systemctl status ntpd    #查看状态</span><br><span class="line">systemctl enable ntpd    #设置为开机自启动</span><br><span class="line"></span><br><span class="line">ntpdate -q &lt;主机IP&gt;       #输入主机IP验证各主机时间是否同步成功</span><br></pre></td></tr></table></figure><h3 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id ceph-1</span><br><span class="line">ssh-copy-id ceph-2</span><br><span class="line">ssh-copy-id ceph-3</span><br></pre></td></tr></table></figure><h3 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">清除以前的yum源</span></span><br><span class="line">rm -rf /etc/yum.repos.d/* </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置阿里云镜像源</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">centos7</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">epel</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建配置文件/etc/yum.repos.d/ceph-repo,并添加以下内容</span></span><br><span class="line">cat &lt;&lt; EOF | tee /etc/yum.repos.d/ceph.repo </span><br><span class="line">[ceph-norch]</span><br><span class="line">name=ceph-norch</span><br><span class="line">baseurl=https://mirrors.aliyun.com/ceph/rpm-nautilus/el7/noarch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[ceph-x86_64]</span><br><span class="line">name=ceph-x86_64</span><br><span class="line">baseurl=https://mirrors.aliyun.com/ceph/rpm-nautilus/el7/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">清除yum配置重新生成缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure><h1 id="ceph集群搭建"><a href="#ceph集群搭建" class="headerlink" title="ceph集群搭建"></a>ceph集群搭建</h1><h2 id="安装部署工具"><a href="#安装部署工具" class="headerlink" title="安装部署工具"></a>安装部署工具</h2><h3 id="center节点"><a href="#center节点" class="headerlink" title="center节点"></a>center节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python-setuptools</span><br><span class="line">yum -y install ceph-deploy</span><br><span class="line"></span><br><span class="line">ceph-deploy --version            #验证版本是否为2.0.1</span><br></pre></td></tr></table></figure><h3 id="ceph-1-ceph-2-ceph-3-节点"><a href="#ceph-1-ceph-2-ceph-3-节点" class="headerlink" title="ceph-1 ceph-2 ceph-3 节点"></a>ceph-1 ceph-2 ceph-3 节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装所需要的包</span></span><br><span class="line">yum -y install ceph ceph-mon ceph-osd ceph-mds ceph-radosgw ceph-mgr</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证(共十二个)</span></span><br><span class="line">rpm -qa | grep ceph</span><br></pre></td></tr></table></figure><p><img src="https://www.z4a.net/images/2024/03/07/-2024-03-07-145843.png" alt="-2024-03-07-145843.png"></p><h2 id="部署monitor"><a href="#部署monitor" class="headerlink" title="部署monitor"></a>部署monitor</h2><p><strong>将ceph-1节点作为monitor，在center节点进行部署</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个目录 /ceph-mon 存放部署时产生的文件</span></span><br><span class="line">mkdir /ceph-demo</span><br><span class="line">cd /ceph-mdemo/</span><br><span class="line">ceph-deploy new ceph-1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">初始化monitor</span></span><br><span class="line">ceph-deploy mon create-initial</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将配置文件拷贝到其他节点上</span></span><br><span class="line">ceph-deploy admin ceph-1 ceph-2 ceph-3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注：如果想要部署高可用monitor，可以将多个节点添加进去，例如：</span></span><br><span class="line">ceph-deploy mon add ceph-2</span><br><span class="line">ceph-deploy mon add ceph-3</span><br></pre></td></tr></table></figure><h2 id="部署manager"><a href="#部署manager" class="headerlink" title="部署manager"></a>部署manager</h2><p><strong>将ceph-1节点作为mgr，在center节点进行部署</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入/ceph-demo目录，方便后续操作</span></span><br><span class="line">cd /ceph-demo</span><br><span class="line">ceph-ceploy mgr create ceph-1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">高可用</span></span><br><span class="line">ceph-deploy mgr create ceph-2 ceph-3</span><br></pre></td></tr></table></figure><h2 id="OSD"><a href="#OSD" class="headerlink" title="OSD"></a>OSD</h2><h3 id="存储方式"><a href="#存储方式" class="headerlink" title="存储方式"></a>存储方式</h3><p>*<em>OSD 可以通过两种方式管理其存储的数据。截至 Luminous 12.2.z 版本，默认（也是推荐的）后端是 <em>BlueStore</em>。事先 在 Luminous 版本中，默认（也是唯一）后端是 <em>Filestore</em>。</em>*</p><p><strong>BlueStore：</strong></p><ul><li><p><strong>BlueStore直接管理裸设备或分区，绕过传统的文件系统层，将数据和元数据直接存储在物理介质上，从而减少IO路径上的开销。</strong></p></li><li><p><strong>效率更高，适合高性能应用场景，如云存储、大规模数据分析和高并发访问的场景。</strong></p></li><li><p><strong>不依赖文件系统，因此不受文件系统限制，例如inode数量等。</strong></p></li></ul><p><strong>FileStore(文件存储)：</strong></p><ul><li><p><strong>Filestore 已在 Reef 版本中弃用，不再受支持。</strong></p></li><li><p><strong>FileStore使用传统的文件系统（通常是XFS）来组织存储空间，每个Ceph对象作为一个文件存储在文件系统内。</strong></p></li><li><p><strong>由于存在文件系统层，对于大规模并发的随机读写场景，性能相对BlueStore较低。</strong></p></li><li><p><strong>写前日志机制会引入额外的写放大数据，可能影响性能，尤其是当日志和OSD数据位于同一硬盘时。</strong></p></li><li><p><strong>便于管理，文件系统的使用使得FileStore在一定程度上更易于管理和维护，比如可以通过标准文件系统工具进行检查和修复。</strong></p></li></ul><p><strong>在目前的版本中传统的文件存储方式（FileStore）已经逐渐被 BlueStore 这种方式所替代</strong></p><h3 id="部署OSD"><a href="#部署OSD" class="headerlink" title="部署OSD"></a>部署OSD</h3><p><strong>选用 FileStore 作为存储引擎，选用每个节点上的 &#x2F;dev&#x2F;sdb 作为数据盘，&#x2F;dev&#x2F;sdc作为日志盘，在center节点上进行操作部署</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">确认每个节点上的磁盘状况</span></span><br><span class="line">ceph-deploy disk list ceph-1 ceph-2 ceph-3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">清理每个节点上的磁盘和系统文件</span></span><br><span class="line">ceph-deploy disk zap ceph-1 /dev/sdb</span><br><span class="line">ceph-deploy disk zap ceph-2 /dev/sdb</span><br><span class="line">ceph-deploy disk zap ceph-3 /dev/sdb</span><br><span class="line">ceph-deploy disk zap ceph-1 /dev/sdc</span><br><span class="line">ceph-deploy disk zap ceph-2 /dev/sdc</span><br><span class="line">ceph-deploy disk zap ceph-3 /dev/sdc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加osd</span></span><br><span class="line">ceph-deploy osd create --data /dev/sdb --journal /dev/sdc --filestore ceph-1</span><br><span class="line">ceph-deploy osd create --data /dev/sdb --journal /dev/sdc --filestore ceph-2</span><br><span class="line">ceph-deploy osd create --data /dev/sdb --journal /dev/sdc --filestore ceph-3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在center节点上验证</span></span><br><span class="line">yum -y isntall ceph</span><br><span class="line">cp ceph.conf /etc/ceph/</span><br><span class="line">cp ceph.client.admin.keyring /etc/ceph/</span><br><span class="line">ceph -s        #访问ceph集群</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ceph版本来源介绍&quot;&gt;&lt;a href=&quot;#Ceph版本来源介绍&quot; class=&quot;headerlink&quot; title=&quot;Ceph版本来源介绍&quot;&gt;&lt;/a&gt;Ceph版本来源介绍&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第一个 Ceph 版本是 0.1 ，要回溯到 2008 年 </summary>
      
    
    
    
    <category term="教程" scheme="http://lssheepcloud.cn/category/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="ceph" scheme="http://lssheepcloud.cn/tag/ceph/"/>
    
    <category term="存储" scheme="http://lssheepcloud.cn/tag/%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lssheepcloud.cn/2023/12/14/hello-world/"/>
    <id>http://lssheepcloud.cn/2023/12/14/hello-world/</id>
    <published>2023-12-14T03:20:05.489Z</published>
    <updated>2023-12-10T06:48:56.102Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">new</span> <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">server</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">generate</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Hexo</summary>
    
    
    
    <category term="其他" scheme="http://lssheepcloud.cn/category/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="hello-world" scheme="http://lssheepcloud.cn/tag/hello-world/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack搭建</title>
    <link href="http://lssheepcloud.cn/2023/12/13/OpenStack%E6%90%AD%E5%BB%BA/"/>
    <id>http://lssheepcloud.cn/2023/12/13/OpenStack%E6%90%AD%E5%BB%BA/</id>
    <published>2023-12-13T06:22:33.000Z</published>
    <updated>2024-03-12T09:33:00.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主机规划"><a href="#主机规划" class="headerlink" title="主机规划"></a>主机规划</h1><table><thead><tr><th>主机名(hostname)</th><th>IP地址(双网卡(NAT,仅主机)）</th><th>规格</th></tr></thead><tbody><tr><td>controller(控制节点)</td><td>192.168.10.10</td><td>4核4g，硬盘100g</td></tr><tr><td>compute(计算节点)</td><td>192.168.10.20</td><td>4核4g，硬盘100g+100g</td></tr></tbody></table><p><em>注：为了不影响后续操作，两台主机默认密码都是“000000”</em></p><p>​        <em>OpenStack的配置文件中不能有中文(注释也不行)</em></p><h2 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h2><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname controller</span><br><span class="line">bash          </span><br></pre></td></tr></table></figure><p><strong>compute节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname compute</span><br><span class="line">bash</span><br></pre></td></tr></table></figure><h2 id="主机映射"><a href="#主机映射" class="headerlink" title="主机映射"></a>主机映射</h2><p><strong>双节点(两个节点都需要执行)</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt;/etc/hosts &lt;&lt;EOF</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">192.168.10.10 controller</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">192.168.10.20 compute</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">EOF</span></span><br></pre></td></tr></table></figure><h2 id="关闭防火墙配置免密登录"><a href="#关闭防火墙配置免密登录" class="headerlink" title="关闭防火墙配置免密登录"></a>关闭防火墙配置免密登录</h2><p><strong>双节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; setenforce 0  #暂时关闭防火墙和seliunx(重启后会自启动)</span><br><span class="line">systemctl disable firewalld               #永久关闭防火墙(关闭开机自启动，需要手动开启)</span><br><span class="line"> </span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config #使用命令修改文件永久关闭seliunx</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa         #按三次回车</span><br><span class="line">ssh-copy-id controller    #第一次输入yes,第二次输入主机密码</span><br><span class="line">ssh-copy-id compute       #第一次输入yes,第二次输入主机密码</span><br></pre></td></tr></table></figure><h1 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h1><p><strong>双节点</strong></p><p><strong>安装 Chrony(推荐) 或 NTP 来实现（选择其中一个安装即可(Chrony更适合虚拟化))</strong></p><h2 id="Chrony"><a href="#Chrony" class="headerlink" title="Chrony"></a>Chrony</h2><p><strong>双节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install chrony   #安装Chrony服务</span><br></pre></td></tr></table></figure><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/chrony.conf     #修改配置文件</span><br><span class="line">server 0.centos.pool.ntp.org iburst 改为 server ntp3.aliyun.com iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst #删除</span><br><span class="line">server 2.centos.pool.ntp.org iburst #删除</span><br><span class="line">server 3.centos.pool.ntp.org iburst #删除</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">allow 192.168.0.0/16 改为 allow all并去掉注释</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">local</span> stratum 10   <span class="comment">#去掉注释</span></span></span><br></pre></td></tr></table></figure><p><strong>compute</strong>节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/chrony.conf     #修改配置文件</span><br><span class="line">server 0.centos.pool.ntp.org iburst 改为 server controller iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst #删除</span><br><span class="line">server 2.centos.pool.ntp.org iburst #删除</span><br><span class="line">server 3.centos.pool.ntp.org iburst #删除</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">allow 192.168.0.0/16 改为 allow all并去掉注释</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">local</span> stratum 10   <span class="comment">#去掉注释</span></span></span><br></pre></td></tr></table></figure><p><strong>修改后的配置文件：</strong></p><p><img src="https://www.z4a.net/images/2023/12/15/2023-12-15-110620.png" alt="2023-12-15-110620.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart chronyd   #重启chrony服务</span><br><span class="line">systemctl enable chronyd    #设置为开机自启动</span><br><span class="line">systemctl status chronyd    #查看状态</span><br><span class="line">chronyc sources             #验证</span><br><span class="line">210 Number of sources = 1</span><br><span class="line">MS Name/IP address         Stratum Poll Reach LastRx Last sample               </span><br><span class="line">===============================================================================</span><br><span class="line">^* 203.107.6.88                  2   6    37    47    -63us[ -319us] +/-   41ms</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">左下角显示*号说明配置成功</span></span><br></pre></td></tr></table></figure><h2 id="NTP"><a href="#NTP" class="headerlink" title="NTP"></a>NTP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp       #安装ntp服务</span><br><span class="line"></span><br><span class="line">vi /etc/ntp.conf         #编辑配置文件</span><br><span class="line">server &lt;NTP服务器IP&gt;      #添加的内容(与chrony服务器的方法相同)</span><br><span class="line"></span><br><span class="line">systemctl restart ntpd   #重启</span><br><span class="line">systemctl status ntpd    #查看状态</span><br><span class="line">systemctl enable ntpd    #设置为开机自启动</span><br><span class="line"></span><br><span class="line">ntpdate -q &lt;主机IP&gt;       #输入主机IP验证两台主机时间是否同步成功</span><br></pre></td></tr></table></figure><p><em>注：公共的ntp服务器</em></p><ul><li><em><a href="http://cn.pool.ntp.org/">cn.pool.ntp.org</a>（中国公共NTP服务器）</em></li><li><em><a href="http://pool.ntp.org/">pool.ntp.org</a>（全球公共NTP服务器）</em></li></ul><h1 id="安装软件包、数据库、消息队列、缓存"><a href="#安装软件包、数据库、消息队列、缓存" class="headerlink" title="安装软件包、数据库、消息队列、缓存"></a>安装软件包、数据库、消息队列、缓存</h1><h2 id="安装OpenStack软件包"><a href="#安装OpenStack软件包" class="headerlink" title="安装OpenStack软件包"></a>安装OpenStack软件包</h2><p><strong>双节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install centos-release-openstack-train    #启用OpenStack存储库</span><br><span class="line">yum upgrade                                      #升级内核(CentOS7以上版本可以不用)</span><br><span class="line">yum -y install python-openstackclient            #安装OpenStack客户端</span><br><span class="line">yum -y install openstack-selinux                 #服务策略</span><br></pre></td></tr></table></figure><h2 id="安装SQL数据库"><a href="#安装SQL数据库" class="headerlink" title="安装SQL数据库"></a>安装SQL数据库</h2><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mariadb mariadb-server python2-PyMySQL      #安装组件</span><br><span class="line"></span><br><span class="line">vi /etc/my.cnf.d/openstack.cnf                             #编辑配置文件</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加以下内容</span></span><br><span class="line">[mysqld]</span><br><span class="line">bind-address = 192.168.10.10                               #改为自己的主机IP</span><br><span class="line"></span><br><span class="line">default-storage-engine = innodb</span><br><span class="line">innodb_file_per_table = on</span><br><span class="line">max_connections = 4096</span><br><span class="line">collation-server = utf8_general_ci</span><br><span class="line">character-set-server = utf8</span><br><span class="line"></span><br><span class="line">systemctl start mariadb.service                            #启动数据库</span><br><span class="line">systemctl enable mariadb.service                           #设置为为开机自启动</span><br><span class="line">mysql_secure_installation                                  #初始化</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第一次按回车</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第二次按Y设置初始密码000000</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第三次按Y</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第四次按n</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第五次按Y</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第六次按Y</span></span><br></pre></td></tr></table></figure><h2 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h2><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rabbitmq-server                         #安装软件包</span><br><span class="line">systemctl start rabbitmq-server.service                #启动服务</span><br><span class="line">systemctl enable rabbitmq-server.service               #设置为开机自启动</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建用户,密码<span class="string">&#x27;openstack123&#x27;</span></span></span><br><span class="line">rabbitmqctl -n rabbit@controller add_user openstack openstack123</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加权限允许用户进行配置、写入和读取访问</span></span><br><span class="line">rabbitmqctl  -n rabbit@controller set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br></pre></td></tr></table></figure><h2 id="安装缓存"><a href="#安装缓存" class="headerlink" title="安装缓存"></a>安装缓存</h2><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install memcached python-memcached -y         #安装软件包</span><br><span class="line"></span><br><span class="line">vi /etc/sysconfig/memcached                       #编辑配置文件</span><br><span class="line">OPTIONS=&quot;-l 127.0.0.1,::1,controller&quot;               #更改现有行&quot;OPTIONS=&quot;-l 127.0.0.1,::1&quot;</span><br><span class="line"></span><br><span class="line">systemctl start memcached.service                #启动服务</span><br><span class="line">systemctl enable memcached.service                #设置为开机自启动</span><br></pre></td></tr></table></figure><h2 id="安装etcd"><a href="#安装etcd" class="headerlink" title="安装etcd"></a>安装etcd</h2><p><em>从S版开始有，详情请参考<a href="https://docs.openstack.org/2023.2/">官网</a>(无特殊需求可以不装)</em></p><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum -y install etcd             #安装软件包</span><br><span class="line"></span><br><span class="line">vi /etc/etcd/etcd.conf          #编辑配置文件(根据对应的选项进行修改)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[Member]</span></span><br><span class="line">ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="line">ETCD_LISTEN_PEER_URLS=&quot;http://&lt;controller节点IP&gt;:2380&quot;</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=&quot;http://&lt;controller节点IP&gt;:2379,http://127.0.0.1:2379&quot;</span><br><span class="line">ETCD_NAME=&quot;controller&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://&lt;controller节点IP&gt;:2380&quot;</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;http://&lt;controller节点IP&gt;:2379&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER=&quot;controller=http://&lt;controller节点IP&gt;&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster-01&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;</span><br><span class="line"></span><br><span class="line">systemctl start etcd            #启动服务</span><br><span class="line">systemctl enable etcd           #设置为开机自启动</span><br><span class="line">etcdctl cluster-health          #验证(输出以下结果表示配置成功)</span><br><span class="line">member 4a1ad6ae1797e6ea is healthy: got healthy result from http://&lt;controller节点IP&gt;:2379</span><br></pre></td></tr></table></figure><h1 id="Keystone服务"><a href="#Keystone服务" class="headerlink" title="Keystone服务"></a>Keystone服务</h1><h2 id="controller节点"><a href="#controller节点" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><p><strong>创建数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入数据库</span></span><br><span class="line">mysql -uroot -p000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建数据库keystone</span></span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE keystone;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">赋予权限(keystone123为密码)</span></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;localhost&#x27; \</span><br><span class="line">IDENTIFIED BY &#x27;keystone123&#x27;;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;%&#x27; \</span><br><span class="line">IDENTIFIED BY &#x27;keystone123&#x27;;</span><br></pre></td></tr></table></figure><p><em>sql语句一定要有  ;  号结尾</em></p><h3 id="安装配置组件"><a href="#安装配置组件" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-keystone httpd mod_wsgi -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件</span></span><br><span class="line">vi /etc/keystone/keystone.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找到需要修改的部分添加内容,查找方法(:/\查找的内容)</span></span><br><span class="line">[database]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">connection = mysql+pymysql://keystone:keystone123@controller/keystone   #直接添加</span><br><span class="line">[token]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">provider = fernet   #直接添加</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">同步数据库</span></span><br><span class="line">su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">初始化 Fernet 密钥存储库</span></span><br><span class="line">keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone</span><br><span class="line">keystone-manage credential_setup --keystone-user keystone --keystone-group keystone</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">初始化 Keystone 系统，并创建第一个管理员用户</span></span><br><span class="line">keystone-manage  bootstrap --bootstrap-password admin --bootstrap-admin-url http://controller:5000/v3/ --bootstrap-internal-url http://controller:5000/v3/ --bootstrap-public-url http://controller:5000/v3/ --bootstrap-region-id RegionOne </span><br></pre></td></tr></table></figure><h3 id="配置HTTP服务器"><a href="#配置HTTP服务器" class="headerlink" title="配置HTTP服务器"></a>配置HTTP服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件</span></span><br><span class="line">vi /etc/httpd/conf/httpd.conf</span><br><span class="line">ServerName controller   #添加这一行</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建指向文件的链接</span></span><br><span class="line">ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start httpd.service</span><br><span class="line">systemctl enable httpd.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建环境变量脚本添加以下内容</span></span><br><span class="line">vi admin.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">export OS_USERNAME=admin  #设置管理员用户的用户名为&quot;admin&quot;</span><br><span class="line">export OS_PASSWORD=admin  #设置管理员用户的密码为&quot;admin&quot;</span><br><span class="line">export OS_PROJECT_NAME=admin  #设置管理员用户所在的项目为&quot;admin&quot;</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default  #设置管理员用户所在域的名称为&quot;Default&quot;</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default  #设置管理员用户所在项目的域的名称为&quot;Default&quot;</span><br><span class="line">export OS_AUTH_URL=http://controller:5000/v3  #设置OpenStack的认证URL为&quot;http://controller:5000/v3&quot;</span><br><span class="line">export OS_IDENTITY_API_VERSION=3  #设置OpenStack的身份认证API版本为&quot;3&quot;</span><br><span class="line">export OS_IMAGE_API_VERSION=2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动脚本</span></span><br><span class="line">source admin.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证</span></span><br><span class="line">openstack endpoint list</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</span><br><span class="line">| ID                               | Region    | Service Name | Service Type | Enabled | Interface | URL                        |</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</span><br><span class="line">| 5c4d1897030749209c3a6f22975ec618 | RegionOne | keystone     | identity     | True    | admin     | http://controller:5000/v3/ |</span><br><span class="line">| 67e3604466c14e698b0efd7f94e66288 | RegionOne | keystone     | identity     | True    | public    | http://controller:5000/v3/ |</span><br><span class="line">| 70ac89874ddf4a238699d73d05d8bb15 | RegionOne | keystone     | identity     | True    | internal  | http://controller:5000/v3/ |</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</span><br></pre></td></tr></table></figure><h3 id="创建域、项目、用户和角色"><a href="#创建域、项目、用户和角色" class="headerlink" title="创建域、项目、用户和角色"></a>创建域、项目、用户和角色</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个名为<span class="string">&quot;Example&quot;</span>的域</span></span><br><span class="line">openstack domain create --description &quot;An Example Domain&quot; example</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在名为 default 的域下创建名为 service 的项目</span></span><br><span class="line">openstack project create --domain default --description &quot;Service Project&quot; service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在 default 域下创建项目 myproject (创建其他用户时,不需要重复该步骤)</span></span><br><span class="line">openstack project create --domain default --description &quot;Demo Project&quot; myproject</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建用户 myuser (需要设置密码,统一为myuser)</span></span><br><span class="line">openstack user create --domain default --password-prompt myuser</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建角色 myrole</span></span><br><span class="line">openstack role create myrole</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将角色添加到项目和用户 myrolemyprojectmyuser</span></span><br><span class="line">openstack role add --project myproject --user myuser myrole</span><br></pre></td></tr></table></figure><p><em>注：重复以上步骤可创建多个项目和用户</em></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">取消设置临时变量和环境变量 OS_AUTH_URLOS_PASSWORD</span></span><br><span class="line">unset OS_AUTH_URL OS_PASSWORD</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要输入admin密码(需要输入两次)</span></span><br><span class="line">openstack --os-auth-url http://controller:5000/v3 \</span><br><span class="line">  --os-project-domain-name Default --os-user-domain-name Default \</span><br><span class="line">  --os-project-name admin --os-username admin token issue</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要输入myuser密码(需要输入两次)</span></span><br><span class="line">openstack --os-auth-url http://controller:5000/v3 \</span><br><span class="line">  --os-project-domain-name Default --os-user-domain-name Default \</span><br><span class="line">  --os-project-name myproject --os-username myuser token issue</span><br></pre></td></tr></table></figure><h3 id="创建-OpenStack-客户端环境脚本"><a href="#创建-OpenStack-客户端环境脚本" class="headerlink" title="创建 OpenStack 客户端环境脚本"></a>创建 OpenStack 客户端环境脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建编辑脚本 admin-openrc</span></span><br><span class="line">mkdir -p /etc/openstack/keystone</span><br><span class="line">vi /etc/openstack/keystone/admin-openrc.sh</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=http://controller:5000/v3</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_IMAGE_API_VERSION=2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用脚本</span></span><br><span class="line">source /etc/openstack/keystone/admin-openrc.sh</span><br><span class="line">openstack token issue</span><br></pre></td></tr></table></figure><h1 id="Glance服务"><a href="#Glance服务" class="headerlink" title="Glance服务"></a>Glance服务</h1><h2 id="controller节点-1"><a href="#controller节点-1" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件-1"><a href="#先决条件-1" class="headerlink" title="先决条件"></a>先决条件</h3><p><strong>创建数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入数据库</span></span><br><span class="line">mysql -uroot -p000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建数据库glance</span></span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE glance;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">授予对 glance 库的适当访问权限</span></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;glance123&#x27;;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;glance123&#x27;;</span><br></pre></td></tr></table></figure><p><strong>创建服务凭据</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取要访问的凭据</span></span><br><span class="line">source /etc/openstack/keystone/admin-openrc.sh </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在名为 default 的域下创建名为 glance 的用户,需要设置密码,密码统一为glance</span></span><br><span class="line">openstack user create --domain default --password-prompt glance </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将 glance 用户添加到 service 项目的 admin 角色中</span></span><br><span class="line">openstack role add --project service --user glance admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个名为glance的镜像服务</span></span><br><span class="line">openstack service create --name glance --description &#x27;Openstack Image&#x27; image</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证(查看服务<span class="built_in">id</span>列表)</span></span><br><span class="line">openstack service list</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">| ID                               | Name     | Type     |</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">| 97ebf2fe63a2402fbfaa36237a2101e1 | glance   | image    |</span><br><span class="line">| d14e27b4de294015912bcdd58d1fb449 | keystone | identity |</span><br><span class="line">+----------------------------------+----------+----------+ </span><br></pre></td></tr></table></figure><p><strong>创建API端点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为名为 glance 的镜像服务创建一个公共的终端，并指定 URL 地址为 http://controller:9292</span></span><br><span class="line">openstack endpoint create --region RegionOne image public http://controller:9292</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">为 glance 的镜像服务创建一个内部的终端，并指定 URL 地址为 http://controller:9292</span></span><br><span class="line">openstack endpoint create --region RegionOne image internal http://controller:9292 </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为 glance 的镜像服务创建一个管理员的终端，并指定 URL 地址为 http://controller:9292</span></span><br><span class="line">openstack endpoint create --region RegionOne image admin http://controller:9292 </span><br></pre></td></tr></table></figure><h3 id="安装配置组件-1"><a href="#安装配置组件-1" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum -y install openstack-glance</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件(与配置keystone方法一样)</span></span><br><span class="line">vi /etc/glance/glance-api.conf</span><br><span class="line">[database]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">connection = mysql+pymysql://glance:glance123@controller/glance #连接数据库</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">www_authenticate_uri = http://controller:5000  #Keystone 的 HTTP 认证端点地址，用于与 Glance 进行认证和授权等操作</span><br><span class="line">auth_url = http://controller:5000  #Keystone 的认证端点地址</span><br><span class="line">memcached_servers = controller:11211  # Memcached 缓存服务器的地址和端口信息，用于缓存 Glance 服务的认证令牌和会话信息</span><br><span class="line">auth_type = password  #认证类型，一般为 password</span><br><span class="line">project_domain_name = Default  #项目域名，默认为 Default</span><br><span class="line">user_domain_name = Default  #用户域名，默认为 Default</span><br><span class="line">Project_name = service  #项目名称，用于指定访问 Keystone API 时使用的项目</span><br><span class="line">username = glance  #用户名，用于指定与 Keystone 进行身份验证时使用的用户名</span><br><span class="line">password = glance  #密码，用于与 Keystone 进行身份验证时使用的密码</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">flavor = keystone  #flavor 参数指定了 Glance 服务所使用的应用程序类型，取值为 keystone。这表示 Glance 服务是以 Keystone 身份认证服务为基础构建的，因此需要与之进行交互，以实现认证和授权等功能</span><br><span class="line"></span><br><span class="line">[glance_store]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">stores = file,http  # Glance 所使用的存储后端类型，可以指定多个，用逗号进行分隔。常见的存储后端类型包括 file、http、https、rbd、swift、cinder 等</span><br><span class="line">default_store = file  #默认的存储后端类型，当一个新的镜像被创建时，将使用该存储后端来保存镜像数据</span><br><span class="line">filesystem_store_datadir = /var/lib/glance/images/  #文件系统存储类型的数据目录，用于指定文件系统存储后端保存镜像数据的路径</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">同步数据库</span></span><br><span class="line">su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl enable openstack-glance-api.service</span><br><span class="line">systemctl start openstack-glance-api.service</span><br></pre></td></tr></table></figure><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><p>验证方式可参考官方文档：</p><p><a href="https://docs.openstack.org/glance/train/install/verify.html">OpenStack Docs：验证操作</a></p><h1 id="Placement服务"><a href="#Placement服务" class="headerlink" title="Placement服务"></a>Placement服务</h1><h2 id="controller节点-2"><a href="#controller节点-2" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件-2"><a href="#先决条件-2" class="headerlink" title="先决条件"></a>先决条件</h3><p><strong>创建数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入数据库</span></span><br><span class="line">mysql -uroot -p000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建palacement库</span></span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE placement;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">授权(placement123为密码)</span></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON placement.* TO &#x27;placement&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;placement123&#x27;;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON placement.* TO &#x27;placement&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;placement123&#x27;;</span><br></pre></td></tr></table></figure><p><strong>配置用户和端点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取凭据(admin)</span></span><br><span class="line">source /etc/openstack/keystone/admin-openrc.sh </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建用户(密码为placement,需要输入两次)</span></span><br><span class="line">openstack user create --domain default --password-prompt placement</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将placement赋予admin权限</span></span><br><span class="line">openstack role add --project service --user placement admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建Placement API项目</span></span><br><span class="line">openstack service create --name placement --description &#x27;placement API&#x27; placement</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建外部端点</span></span><br><span class="line">openstack endpoint create --region RegionOne placement public http://controller:8778</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建内部端点</span></span><br><span class="line">openstack endpoint create --region RegionOne placement internal http://controller:8778</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建管理员端点</span></span><br><span class="line">openstack endpoint create --region RegionOne placement admin http://controller:8778 </span><br></pre></td></tr></table></figure><h3 id="安装和配置组件"><a href="#安装和配置组件" class="headerlink" title="安装和配置组件"></a>安装和配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum -y install openstack-placement-api</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件(和之前的方法一致)</span></span><br><span class="line">vi /etc/placement/placement.conf</span><br><span class="line">[placement_database]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">connection = mysql+pymysql://placement:placement123@controller/placement</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">auth_url = http://controller:5000/v3</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = placement</span><br><span class="line">password = placement</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">同步数据库 placement(忽略此输出中的任何弃用消息)</span></span><br><span class="line">su -s /bin/sh -c &quot;placement-manage db sync&quot; placement</span><br></pre></td></tr></table></figure><h3 id="验证-2"><a href="#验证-2" class="headerlink" title="验证"></a>验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取凭证(admin)</span></span><br><span class="line">source /etc/openstack/keystone/admin-openrc.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看状态</span></span><br><span class="line">placement-status upgrade check</span><br><span class="line">+----------------------------------+</span><br><span class="line">| Upgrade Check Results            |</span><br><span class="line">+----------------------------------+</span><br><span class="line">| Check: Missing Root Provider IDs |</span><br><span class="line">| Result: Success                  |</span><br><span class="line">| Details: None                    |</span><br><span class="line">+----------------------------------+</span><br><span class="line">| Check: Incomplete Consumers      |</span><br><span class="line">| Result: Success                  |</span><br><span class="line">| Details: None                    |</span><br><span class="line">+----------------------------------+</span><br></pre></td></tr></table></figure><h1 id="Nova服务"><a href="#Nova服务" class="headerlink" title="Nova服务"></a>Nova服务</h1><h2 id="controller节点-3"><a href="#controller节点-3" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件-3"><a href="#先决条件-3" class="headerlink" title="先决条件"></a>先决条件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入数据库</span></span><br><span class="line">mysql -uroot -p000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建三个数据库</span></span><br><span class="line">create database nova_api;</span><br><span class="line">create database nova;</span><br><span class="line">create database nova_cell0;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">对以创建的三个数据库赋予权限</span></span><br><span class="line">grant all privileges on nova_api.* to &#x27;nova&#x27;@&#x27;%&#x27; identified by &#x27;nova123&#x27;;</span><br><span class="line">grant all privileges on nova.* to &#x27;nova&#x27;@&#x27;%&#x27; identified by &#x27;nova123&#x27;;</span><br><span class="line">grant all privileges on nova_cell0.* to &#x27;nova&#x27;@&#x27;%&#x27; identified by &#x27;nova123&#x27;;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建 nova 用户(密码统一为 nova)</span></span><br><span class="line">openstack user create --domain default --password-prompt nova</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将 nova 用户添加到 service 项目中并分配 admin 角色</span></span><br><span class="line">openstack role add --project service --user nova admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个名为 nova 的计算服务</span></span><br><span class="line">openstack service create --name nova --description &quot;Openstack Compute&quot; compute</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个名为 compute 的计算服务公共 API 端点</span></span><br><span class="line">openstack endpoint create --region RegionOne compute public http://controller:8774/v2.1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个名为 compute 的计算服务内部 API 端点</span></span><br><span class="line">openstack endpoint create --region RegionOne compute internal http://controller:8774/v2.1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个名为 compute 的计算服务管理员 API 端点</span></span><br><span class="line">openstack endpoint create --region RegionOne compute admin http://controller:8774/v2.1</span><br></pre></td></tr></table></figure><h3 id="安装和配置组件-1"><a href="#安装和配置组件-1" class="headerlink" title="安装和配置组件"></a>安装和配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-nova-api openstack-nova-conductor openstack-nova-novncproxy openstack-nova-scheduler -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件 /etc/nova/nova.conf</span></span><br><span class="line">vi /etc/nova/nova.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">enabled_apis = osapi_compute,metadata  #指定启用 Nova 计算服务的 API 类型为 osapi_compute 和 metadata，分别对应计算服务和元数据服务接口</span><br><span class="line">transport_url = rabbit://openstack:openstack123@controller:5672/  # 指定 Nova 计算服务使用的消息队列传输协议的 URL 地址，其中 openstack 和 openstack123 分别为 RabbitMQ 服务所需要的用户名和密码，controller 表示 RabbitMQ 所在的节点地址，5672 为 RabbitMQ 的默认端口号</span><br><span class="line">use_neutron = true  #指定 Nova 计算服务使用 Neutron 网络服务连接虚拟机实例，默认为 false</span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver #指定 Nova 计算服务使用的防火墙驱动程序，该行配置表示使用 NoopFirewallDriver 空白防火墙驱动程序，即不对虚拟机实例进行防火墙设置</span><br><span class="line">my_ip = 192.168.10.10</span><br><span class="line"></span><br><span class="line">[api_database]</span><br><span class="line">connection = mysql+pymysql://nova:nova123@controller/nova_api #连接数据库</span><br><span class="line"></span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://nova:nova123@controller/nova #连接数据库</span><br><span class="line"></span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone #指定 OpenStack API 服务使用 Keystone 身份认证服务进行身份验证和授权管理</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_url = http://controller:5000/ #指定 Keystone 身份认证服务的 HTTP 认证 URL 地址，用于向 Nova 计算服务提供身份认证和授权服务</span><br><span class="line">auth_url = http://controller:5000/ # 指定 Keystone 身份认证服务的默认 URL 地址，用于向 Nova 计算服务提供身份认证和授权服务</span><br><span class="line">memcached_servers = controller:11211 #指定 Keystone 使用的 memcached 服务器地址和端口号，用于缓存身份认证令牌信息，提高身份认证效。</span><br><span class="line">auth_type = password #指定身份认证类型为密码认证，即使用用户名和密码进行身份认证</span><br><span class="line">project_domain_name = Default #指定 Keystone 身份认证服务所使用的项目域名，默认为 Default</span><br><span class="line">user_domain_name = Default #指定 Keystone 身份认证服务所使用的项目域名，默认为 Default</span><br><span class="line">project_name = service  # 指定 Keystone 身份认证服务所用的项目名称，用于与 Nova 计算服务进行交互</span><br><span class="line">username = nova #指定 Keystone 身份认证服务所用的用户名，用于与 Nova 计算服务进行交互</span><br><span class="line">password = nova #指定 Keystone 身份认证服务所用的密码，用于与 Nova 计算服务进行交互</span><br><span class="line"></span><br><span class="line">[vnc]</span><br><span class="line">enabled = true #指定 VNC 控制台功能是否启用，该行配置表示启用 VNC 控制台功能</span><br><span class="line">server_listen = $my_ip #指定 VNC 服务所监听的 IP 地址，该行配置中的 $my_ip 表示使用本地主机的 IP 地址进行监听。需要注意的是，如果计算节点的网络配置存在多个网卡或网络接口，需要指定具体的 IP 地址进行监听，否则可能导致 VNC 服务无法正常工作</span><br><span class="line">server_proxyclient_address = $my_ip #指定 VNC 服务代理客户端所使用的 IP 地址，该行配置中的 $my_ip 表示使用本地主机的 IP 地址作为代理客户端 IP 地址。代理客户端通常是指浏览器等客户端应用程序，用于连接 VNC 服务，如果不生效，可能会导致 VNC 服务无法正常工作</span><br><span class="line"></span><br><span class="line">[glance]</span><br><span class="line">api_servers = http://controller:9292  #指定 Glance 镜像服务的 API 服务器地址和端口号，用于向 Nova 计算服务提供镜像服务</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /var/lab/nova/tmp  #指定锁文件的存放路径，用于实现并发控制和资源管理</span><br><span class="line"></span><br><span class="line">[placement]</span><br><span class="line">region_name = RegionOne #指定 OpenStack 环境中的区域名称，默认为 RegionOne</span><br><span class="line">project_domain_name = Default #指定项目领域的名称，默认为 Default</span><br><span class="line">project_name = service #指定所属项目的名称</span><br><span class="line">auth_type = password #指定认证方式为密码认证</span><br><span class="line">user_domain_name = Default #指定用户领域的名称，默认为 Default</span><br><span class="line">auth_url = http://controller:5000/v3 #指定认证服务的地址和版本号，用于向 Keystone 身份认证服务进行认证</span><br><span class="line">username = placement #指定用于认证的用户名</span><br><span class="line">password = placement #指定用于认证的密码</span><br></pre></td></tr></table></figure><h3 id="同步数据库"><a href="#同步数据库" class="headerlink" title="同步数据库"></a>同步数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">填充数据库 nova-api</span></span><br><span class="line">su -s /bin/sh -c &quot;nova-manage api_db sync&quot; nova</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注册数据库 cell0</span></span><br><span class="line">su -s /bin/sh -c &quot;nova-manage cell_v2 map_cell0&quot; nova</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建单元格 cell1</span></span><br><span class="line">su -s /bin/sh -c &quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot; nova</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">填充nova数据库</span></span><br><span class="line">su -s /bin/sh -c &quot;nova-manage db sync&quot; nova</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证是否正确注册</span></span><br><span class="line">su -s /bin/sh -c &quot;nova-manage cell_v2 list_cells&quot; nova</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务(配置为在系统启动时启动)</span></span><br><span class="line">systemctl enable openstack-nova-api --now</span><br><span class="line">systemctl enable openstack-nova-scheduler --now</span><br><span class="line">systemctl enable openstack-nova-conductor --now</span><br><span class="line">systemctl enable openstack-nova-novncproxy --now</span><br></pre></td></tr></table></figure><h2 id="compute节点"><a href="#compute节点" class="headerlink" title="compute节点"></a>compute节点</h2><h3 id="安装配置组件-2"><a href="#安装配置组件-2" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum -y install openstack-nova-compute</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件 /etc/nova/nova.conf</span></span><br><span class="line">vi /etc/nova/nova.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">enabled_apis = osapi_compute,metadata   #表示启用的API服务，包括计算服务（osapi_compute）和元数据服务（metadata）</span><br><span class="line">transport_url = rabbit://openstack:openstack123@controller  #表示消息队列RabbitMQ的连接地址，用户名为openstack，密码为openstack123，连接到服务器为controller</span><br><span class="line">my_ip = 192.168.10.20  #为当前节点的IP地址</span><br><span class="line">use_neutron = true  #表示是否使用Neutron网络服务</span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver  #表示所使用的防火墙驱动。这里设置nova.virt.firewall.NoopFirewallDriver，#即不启用防火墙功能</span><br><span class="line"></span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone  #表示认证策略，这里设为keystone</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_url = http://controller:5000/   #Keystone服务的认证地址</span><br><span class="line">auth_url = http://controller:5000/  #Keystone服务的管理地址</span><br><span class="line">memcached_servers = controller:11211 #为Memcached服务地址，用于缓存Keystone的token</span><br><span class="line">auth_type = password  #表示认证类型，这里为password</span><br><span class="line">project_domain_name = Default  #项目域名</span><br><span class="line">user_domain_name = Default  #用户域名</span><br><span class="line">project_name = service  #项目</span><br><span class="line">username = nova  #用户名</span><br><span class="line">password = nova  #密码</span><br><span class="line"></span><br><span class="line">[vnc]</span><br><span class="line">enabled = true  #enabled表示是否启用VNC</span><br><span class="line">server_listen = 0.0.0.0  #表示监听地址</span><br><span class="line">server_proxyclient_address = $my_ip  #表示代理客户端地址，这里为$my_ip</span><br><span class="line">novncproxy_base_url = http://controller:6080/vnc_auto.html  #为使用novnc协议时的URL地址</span><br><span class="line"></span><br><span class="line">[glance]</span><br><span class="line">api_servers = http://controller:9292  #表示Glance镜像服务的API地址</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /var/lab/nova/tmp  #表示锁文件的存储路径</span><br><span class="line"></span><br><span class="line">[placement]</span><br><span class="line">region_name = RegionOne #指定 OpenStack 环境中的区域名称，默认为 RegionOne</span><br><span class="line">project_domain_name = Default #指定项目领域的名称，默认为 Default</span><br><span class="line">project_name = service #指定所属项目的名称</span><br><span class="line">auth_type = password #指定认证方式为密码认证</span><br><span class="line">user_domain_name = Default #指定用户领域的名称，默认为 Default</span><br><span class="line">auth_url = http://controller:5000/v3 #指定认证服务的地址和版本号，用于向 Keystone 身份认证服务进行认证</span><br><span class="line">username = placement #指定用于认证的用户名</span><br><span class="line">password = placement #指定用于认证的密码</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">确定计算节点是否支持硬件加速</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">egrep -c <span class="string">&#x27;(vmx|svm)&#x27;</span> /proc/cpuinfo</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件 /etc/nova/nova.conf</span></span><br><span class="line">[libvirt]</span><br><span class="line">virt_type = qemu</span><br></pre></td></tr></table></figure><h3 id="启动服务并验证"><a href="#启动服务并验证" class="headerlink" title="启动服务并验证"></a>启动服务并验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl enable libvirtd --now</span><br><span class="line">systemctl enable openstack-nova-compute --now</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在controller节点上执行</span></span><br><span class="line">openstack compute service list --service nova-compute</span><br><span class="line">+----+--------------+---------+------+---------+-------+----------------------------+</span><br><span class="line">| ID | Binary       | Host    | Zone | Status  | State | Updated At                 |</span><br><span class="line">+----+--------------+---------+------+---------+-------+----------------------------+</span><br><span class="line">| 10 | nova-compute | compute | nova | enabled | up    | 2024-03-11T06:08:53.000000 |</span><br><span class="line">+----+--------------+---------+------+---------+-------+----------------------------+</span><br><span class="line">su -s /bin/sh -c &quot;nova-manage cell_v2 discover_hosts --verbose&quot; nova</span><br><span class="line"></span><br><span class="line">Found 2 cell mappings.</span><br><span class="line">Skipping cell0 since it does not contain hosts.</span><br><span class="line">Getting computes from cell &#x27;cell1&#x27;: c3bce124-3708-41eb-8bc0-d00ad8c97174</span><br><span class="line">Checking host mapping for compute host &#x27;compute&#x27;: 485f806a-29ce-4440-ac6b-93d6173421da</span><br><span class="line">Creating host mapping for compute host &#x27;compute&#x27;: 485f806a-29ce-4440-ac6b-93d6173421da</span><br><span class="line">Found 1 unmapped computes in cell: c3bce124-3708-41eb-8bc0-d0</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件 /etc/nova/nova.conf</span></span><br><span class="line">vi /etc/nova/nova.conf</span><br><span class="line">[scheduler]</span><br><span class="line">discover_hosts_in_cells_interval = 300  #表示在Nova单元格（cell）架构中发现主机并将其映射到适当的单元格的频率</span><br></pre></td></tr></table></figure><h1 id="Neutron服务"><a href="#Neutron服务" class="headerlink" title="Neutron服务"></a>Neutron服务</h1><h2 id="controller节点-4"><a href="#controller节点-4" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件-4"><a href="#先决条件-4" class="headerlink" title="先决条件"></a>先决条件</h3><p><strong>创建数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入数据库</span></span><br><span class="line">mysql -uroot -p000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建数据库 neutron</span></span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE neutron;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">赋予权限</span></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON neutron.* TO &#x27;neutron&#x27;@&#x27;localhost&#x27; \</span><br><span class="line">  IDENTIFIED BY &#x27;neutron123&#x27;;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON neutron.* TO &#x27;neutron&#x27;@&#x27;%&#x27; \</span><br><span class="line">  IDENTIFIED BY &#x27;neutron123&#x27;;</span><br></pre></td></tr></table></figure><p><strong>创建服务凭据</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建用户 neutron 密码为 neutron</span></span><br><span class="line">openstack user create --domain default --password-prompt neutron</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">为neutron用户赋予admin权限</span></span><br><span class="line">openstack role add --project service --user neutron admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建网络服务</span></span><br><span class="line">openstack service create --name neutron --description &quot;Openstack Networking&quot; network </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建外部端点</span></span><br><span class="line">openstack endpoint create --region RegionOne network public http://controller:9696 </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建内部端点</span></span><br><span class="line">openstack endpoint create --region RegionOne network internal http://controller:9696  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建管理员端点</span></span><br><span class="line">openstack endpoint create --region RegionOne network admin http://controller:9696</span><br></pre></td></tr></table></figure><h3 id="安装配置组件-3"><a href="#安装配置组件-3" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件 /etc/neutron/neutron.conf</span></span><br><span class="line">vi /etc/neutron/neutron.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">core_plugin = ml2  #表示Neutron使用的核心插件，这里为ml2</span><br><span class="line">service_plugin =   #表示Neutron使用的服务插件，这里为空字符串（即未设置）</span><br><span class="line">transport_url = rabbit://openstack:openstack123@controller  #表示消息传输的URL，这里为使用RabbitMQ消息队列服务的地址</span><br><span class="line">auth_strategy = keystone  #表示认证策略，这里为keystone</span><br><span class="line">notify_nova_on_port_status_changes = true  #当某个port状态有变化时是否通知Nova，这里设置为true</span><br><span class="line">notify_nova_on_port_data_changes = true  #当某个port数据有变化时是否通知Nova，这里设置为true</span><br><span class="line"></span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://neutron:neutron123@controller/neutron  #表示Neutron使用的数据库连接信息</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_url = http://controller:5000  #表示认证时使用的URL，这里为Keystone服务的URL</span><br><span class="line">auth_url = http://controller:5000  #表示认证时使用的URL，这里为Keystone服务的URL</span><br><span class="line">memcached_servers = controller:11211  #表示存储缓存信息的Memcached服务地址，这里为controller服务器的11211端口</span><br><span class="line">auth_type = password  #表示认证类型，这里为password</span><br><span class="line">project_domain_name = default  #表示Neutron使用的项目域名，这里为默认值default</span><br><span class="line">user_domain_name = default  #表示Neutron使用的用户域名，这里为默认值default</span><br><span class="line">project_name = service  #表示Neutron使用的项目名称，这里为service</span><br><span class="line">username = neutron  #表示Neutron使用的用户名，这里为neutron</span><br><span class="line">password = neutron  #表示Neutron使用的用户密码，这里为neutron</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件最下面新增</span></span><br><span class="line">[nova]</span><br><span class="line">auth_url = http://controller:5000  #表示Nova服务使用的Keystone认证URL，这里为controller服务器的5000端口</span><br><span class="line">auth_type = password  #表示认证类型，这里为password</span><br><span class="line">project_domain_name = default  #表示Nova服务使用的项目域名，这里为默认值default</span><br><span class="line">user_domain_name = default  #表示Nova服务使用的用户域名，这里为默认值default</span><br><span class="line">region_name = RegionOne  #表示Nova服务所在的区域名称，这里为RegionOne</span><br><span class="line">project_name = service  #表示Nova服务使用的项目名称，这里为service</span><br><span class="line">username = nova  #表示Nova服务使用的用户名，这里为nova</span><br><span class="line">password = nova  #表示Nova服务使用的用户密码，这里为nova</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /var/lib/neutron/tmp  #表示存储锁文件的路径，这里为/var/lib/neutron/tmp</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/neutron/plugins/ml2/ml2_conf.ini</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文末新增</span></span><br><span class="line">[ml2]</span><br><span class="line">type_drivers = flat.vlan  #表示网络类型的驱动程序类型，这里有两种类型：flat和vlan</span><br><span class="line">tenant_network_types =  #表示拥有哪些网络类型的租户网络，这里为空，即租户无法使用任何网络类型</span><br><span class="line">mechanism_drivers = linuxbridge  #表示底层网络设备驱动程序类型，这里为linuxbridge</span><br><span class="line">extension_drivers = port_security  #表示支持的扩展驱动程序类型，这里为port_security，表示支持安全端口功能</span><br><span class="line">flat_networks = extnet  #表示该服务支持的平面网络名称列表，这里为extnet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_ipset = true  #指定是否启用ipset安全组驱动程序，这里为true</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/neutron/plugins/ml2/linuxbridge_agent.ini</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件末新增</span></span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings = extnet:ens33  #指定Linux网桥的物理网络接口名称和虚拟网络名称之间的映射关系，这里为extnet:ens33，表示将虚拟网络extnet连接到物理网络接口ens33上</span><br><span class="line"></span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = false  #指定是否启用VXLAN网络，这里为false，表示不使用VXLAN网络</span><br><span class="line"> </span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = true  #指定是否启用安全组，这里为true，表示启用安全组功能</span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver  #指定防火墙驱动程序类型，这里为neutron.agent.linux.iptables_firewall.IptablesFirewallDriver，表示使用iptables防火墙驱动程序</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置内核</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置内核</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1  #表示当Linux网桥接收到网络数据包时，将会检查iptables过滤规则，并按照规则进行过滤。这个参数在使用Linux网桥作为虚拟网络设备时非常重要，因为它可以确保虚拟网络中的数据传输符合安全策略，提高网络的可靠性和安全性</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1  #表示当Linux网桥接收到IPv6网络数据包时，将会检查ip6tables过滤规则，并按照规则进行过滤。这个参数同样对于使用IPv6地址的虚拟网络设备非常重要。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/neutron/dhcp_agent.ini</span><br><span class="line">[DEFAULT]</span><br><span class="line">interface_driver = linuxbridge  #指定DHCP代理的接口驱动程序类型为Linux桥接</span><br><span class="line">dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq  #指定DHCP代理的接口驱动程序类型为Linux桥接</span><br><span class="line">enable_isolated_metadata = true  #指定是否启用隔离元数据代理服务，这里为true，表示启用服务</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/neutron/metadata_agent.ini</span><br><span class="line">[DEFAULT]</span><br><span class="line">nova_metadata_host = controller  #指定OpenStack Nova API的元数据服务主机地址，这里为controller，表示元数据服务运行在OpenStack控制节点上</span><br><span class="line">metadata_proxy_shared_secret = xier123  #指定元数据代理与元数据服务之间共享的密钥，这里为xier123，需要确保元数据服务与元数据代理使用相同的密钥</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nova/nova.conf</span><br><span class="line">[neutron]</span><br><span class="line">auth_url = http://controller:5000  #指定OpenStack Identity服务的URL地址</span><br><span class="line">auth_type = password  #指定认证类型为密码认证</span><br><span class="line">project_domain_name = default  #指定项目域名称为默认</span><br><span class="line">user_domain_name = default  #指定用户域名称为默认</span><br><span class="line">region_name = RegionOne  #指定OpenStack服务所在的区域/地区名称</span><br><span class="line">project_name = service  #指定Nova服务的项目名称</span><br><span class="line">username = neutron  #指定连接到Neutron服务时使用的用户名</span><br><span class="line">password = neutron  #指定连接到Neutron服务时使用的密码</span><br><span class="line">service_metadata_proxy = true  #表示Nova计算服务将启用元数据代理服务，并将元数据代理服务与Neutron服务集成</span><br><span class="line">metadata_proxy_shared_secret = xier123  #指定元数据代理与元数据服务之间共享的密钥，这里为xier123，需要确保元数据代理与元数据服务使用相同的密钥</span><br></pre></td></tr></table></figure><h3 id="同步数据库并启动服务"><a href="#同步数据库并启动服务" class="headerlink" title="同步数据库并启动服务"></a>同步数据库并启动服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建软连接</span></span><br><span class="line">ln -s /etc/neutron/plugins/ml2/ml2_conf.ini  /etc/neutron/plugin.ini</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">同步数据库</span></span><br><span class="line">su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启服务并设置开机自启</span></span><br><span class="line">systemctl restart neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent</span><br><span class="line"> systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent</span><br></pre></td></tr></table></figure><h2 id="compute节点-1"><a href="#compute节点-1" class="headerlink" title="compute节点"></a>compute节点</h2><h3 id="安装配置组件-4"><a href="#安装配置组件-4" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-neutron-linuxbridge ebtables ipset -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改配置文件 /etc/neutron/neutron.conf</span></span><br><span class="line">vi /etc/neutron/neutron.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">transport_url = rabbit://openstack:openstack123@controller  #指定RabbitMQ的连接URL地址</span><br><span class="line">auth_strategy = keystone  #指定认证策略为Keystone认证</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_url = http://controller:5000  #指定用于向用户提供身份验证页面的URL地址</span><br><span class="line">auth_url = http://controller:5000  #指定Keystone服务的URL地址</span><br><span class="line">memcached_servers = controller:11211  #指定用于缓存令牌(token)的Memcached服务地址和端口号</span><br><span class="line">auth_type = password  #指定认证类型为密码认证</span><br><span class="line">project_domain_name = default  #指定项目域名称为默认(default)</span><br><span class="line">user_domain_name = default  #指定用户域名称为默认(default)</span><br><span class="line">project_name = service  #指定服务所在的项目名称</span><br><span class="line">username = neutron  #指定连接到Keystone服务时使用的用户名</span><br><span class="line">password = neutron  #指定连接到Keystone服务时使用的密码</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /var/lib/neutron/tmp  #指定保存锁文件的路径</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/neutron/plugins/ml2/linuxbridge_agent.ini</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件末新增</span></span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings = extnet:ens33  #指定了网桥与物理网络接口的映射关系</span><br><span class="line"></span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = false  #参数指定是否启用VXLAN虚拟化网络</span><br><span class="line"></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = true  #参数指定是否启用安全组功能</span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver  #参数指定使用哪个防火墙驱动程序，这里使用基于iptables的驱动程序IptablesFirewallDriver</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nova/nova.conf</span><br><span class="line">[neutron]</span><br><span class="line">auth_url = http://controller:5000  #参数指定了认证服务的访问地址</span><br><span class="line">auth_type = password  #参数指定了认证方式</span><br><span class="line">project_domain_name = default  #参数指定了所使用的域名</span><br><span class="line">user_domain_name = default  #参数指定了所使用的域名</span><br><span class="line">region_name = RegionOne  #参数指定了Neutron服务所属的区域名称</span><br><span class="line">project_name = service  #参数指定了Neutron服务所属的项目名称</span><br><span class="line">username = neutron  #用户名</span><br><span class="line">password = neutron  #密码</span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart openstack-nova-compute</span><br><span class="line">systemctl enable neutron-linuxbridge-agent --now</span><br></pre></td></tr></table></figure><h1 id="Dashboard服务"><a href="#Dashboard服务" class="headerlink" title="Dashboard服务"></a>Dashboard服务</h1><h2 id="controller节点-5"><a href="#controller节点-5" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="安装配置组件-5"><a href="#安装配置组件-5" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-dashboard -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改配置文件 /etc/openstack-dashboard/local_settings</span></span><br><span class="line">vi /etc/openstack-dashboard/local_settings</span><br><span class="line"></span><br><span class="line">OPENSTACK_HOST = &quot;controller&quot;  #参数指定了OpenStack服务所在主机的名称或IP地址</span><br><span class="line">ALLOWED_HOSTS = [&#x27;*&#x27;]  #参数指定了OpenStack服务所在主机的名称或IP地址，这里表示允许所有</span><br><span class="line">SESSION_ENGINE = &#x27;django.contrib.sessions.backends.cache&#x27;  </span><br><span class="line">CACHES = &#123;</span><br><span class="line">    &#x27;default&#x27;: &#123;        </span><br><span class="line">        &#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.memcached.MemcachedCache&#x27;,   #</span><br><span class="line">        &#x27;LOCATION&#x27;: &#x27;controller:11211&#x27;,</span><br><span class="line">    &#125;  #指定了使用缓存来存储用户会话信息的方式，这里使用的是Memcached</span><br><span class="line">&#125;</span><br><span class="line">OPENSTACK_KEYSTONE_URL = &quot;http://%s:5000/v3&quot; % OPENSTACK_HOST  #参数指定了Keystone认证服务的访问地址</span><br><span class="line">OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True  #新增,表示支持多域模式</span><br><span class="line">OPENSTACK_API_VERSIONS = &#123;</span><br><span class="line">    &quot;identity&quot;: 3,</span><br><span class="line">    &quot;image&quot;: 2,</span><br><span class="line">    &quot;volume&quot;: 2,</span><br><span class="line">&#125;  #新增，指定api版本信息</span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = &#x27;Default&#x27; #新增，参数指定了默认域名</span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_ROLE = &#x27;user&#x27; #新增 ，参数指定了默认角色，这里为user</span><br><span class="line">OPENSTACK_NEUTRON_NETWORK = &#123;</span><br><span class="line">    &#x27;enable_auto_allocated_network&#x27;: False,</span><br><span class="line">    &#x27;enable_distributed_router&#x27;: False,</span><br><span class="line">    &#x27;enable_fip_topology_check&#x27;: True,</span><br><span class="line">    &#x27;enable_ha_router&#x27;: False,</span><br><span class="line">    &#x27;enable_lb&#x27;: False,</span><br><span class="line">    &#x27;enable_firewall&#x27;: False,</span><br><span class="line">    &#x27;enable_vpn&#x27;: False,</span><br><span class="line">    &#x27;enable_ipv6&#x27;: True,</span><br><span class="line">    &#x27;enable_fip_topology_check&#x27;: False,</span><br><span class="line">    # TODO(amotoki): Drop OPENSTACK_NEUTRON_NETWORK completely from here.</span><br><span class="line">    # enable_quotas has the different default value here.</span><br><span class="line">    &#x27;enable_quotas&#x27;: False,</span><br><span class="line">    &#x27;enable_rbac_policy&#x27;: True,</span><br><span class="line">    &#x27;enable_router&#x27;: False,</span><br><span class="line">    &#x27;default_dns_nameservers&#x27;: [],</span><br><span class="line">    &#x27;supported_provider_types&#x27;: [&#x27;*&#x27;],</span><br><span class="line">    &#x27;segmentation_id_range&#x27;: &#123;&#125;,</span><br><span class="line">    &#x27;extra_provider_types&#x27;: &#123;&#125;,</span><br><span class="line">    &#x27;supported_vnic_types&#x27;: [&#x27;*&#x27;],</span><br><span class="line">    &#x27;physical_networks&#x27;: [],</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">TIME_ZONE = &quot;Asia/Shanghai&quot;  #新增，参数用于指定时区，这里设置为&quot;Asia/Shanghai&quot;，以符合中国标准时间</span><br><span class="line">WEBROOT = &#x27;/dashboard&#x27;  #新增，用于指定OpenStack仪表盘的访问路径，这里设置为/dashboard</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/httpd/conf.d/openstack-dashboard.conf </span><br><span class="line"></span><br><span class="line">WSGIApplicationGroup %&#123;GLOBAL&#125;  #新增</span><br></pre></td></tr></table></figure><h3 id="启动服务并验证-1"><a href="#启动服务并验证-1" class="headerlink" title="启动服务并验证"></a>启动服务并验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启服务</span></span><br><span class="line">systemctl restart httpd memcached</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证</span></span><br><span class="line">访问: 192.168.10.10/dashboard</span><br><span class="line">域: default</span><br><span class="line">用户名: admin</span><br><span class="line">密码: admin</span><br></pre></td></tr></table></figure><ul><li><img src="https://img2.imgtp.com/2024/03/12/tIypOq4x.png" alt="屏幕截图 2024-03-12 160224.png"></li></ul><p><img src="https://img2.imgtp.com/2024/03/12/vJfRTGJz.png" alt="屏幕截图 2024-03-12 160211.png"></p><h1 id="Cinder服务"><a href="#Cinder服务" class="headerlink" title="Cinder服务"></a>Cinder服务</h1><h2 id="controller节点-6"><a href="#controller节点-6" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件-5"><a href="#先决条件-5" class="headerlink" title="先决条件"></a>先决条件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建数据库赋予权限</span></span><br><span class="line">mysql -uroot -p000000</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE cinder;</span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on cinder.* to &#x27;cinder&#x27;@&#x27;%&#x27; identified by &#x27;cinder123&#x27;;</span><br></pre></td></tr></table></figure><h4 id="创建用户凭据"><a href="#创建用户凭据" class="headerlink" title="创建用户凭据"></a>创建用户凭据</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建用户 密码为 cinder</span></span><br><span class="line">openstack user create --domain default --password-prompt cinder</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加到admin</span></span><br><span class="line">openstack role add --project service --user cinder admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建和服务实体</span> </span><br><span class="line">openstack service create --name cinderv2 --description &quot;OpenStack Block Storage&quot; volumev2</span><br><span class="line"></span><br><span class="line">openstack service create --name cinderv3 --description &quot;OpenStack Block Storage&quot; volumev3</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建块存储服务 API 端点</span></span><br><span class="line">openstack endpoint create --region RegionOne volumev2 public http://controller:8776/v2/%\(project_id\)s</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne volumev2 internal http://controller:8776/v2/%\(project_id\)s</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne volumev2 admin http://controller:8776/v2/%\(project_id\)s</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne volumev3 public http://controller:8776/v3/%\(project_id\)s</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne volumev3 internal http://controller:8776/v3/%\(project_id\)s</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne volumev3 admin http://controller:8776/v3/%\(project_id\)s</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h3 id="安装配置组件-6"><a href="#安装配置组件-6" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-cinder -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件 /etc/cinder/cinder.conf</span></span><br><span class="line">vi /etc/cinder/cinder.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">transport_url = rabbit://openstack:openstack123@controller</span><br><span class="line">auth_strategy = keystone</span><br><span class="line">my_ip = 192.168.10.10</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /var/lib/cinder/tmp</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = http://controller:5000</span><br><span class="line">auth_url = http://controller:5000</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = cinder</span><br><span class="line">password = cinder</span><br><span class="line"></span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://cinder:cinder123@controller/cinder</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nova/nova.conf</span><br><span class="line">[cinder]</span><br><span class="line">os_region_name = RegionOne</span><br></pre></td></tr></table></figure><h3 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">同步数据库</span></span><br><span class="line">sudo su -s /bin/sh -c &quot;cinder-manage db sync&quot; cinder</span><br><span class="line"></span><br><span class="line">systemctl restart openstack-nova-api</span><br><span class="line">systemctl start openstack-cinder-api openstack-cinder-scheduler</span><br><span class="line">systemctl enable openstack-cinder-api openstack-cinder-scheduler</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证</span></span><br><span class="line">openstack volume service list</span><br><span class="line">+------------------+------------+------+---------+-------+----------------------------+</span><br><span class="line">| Binary           | Host       | Zone | Status  | State | Updated At                 |</span><br><span class="line">+------------------+------------+------+---------+-------+----------------------------+</span><br><span class="line">| cinder-scheduler | controller | nova | enabled | up    | 2024-03-12T08:29:34.000000 |</span><br><span class="line">+------------------+------------+------+---------+-------+----------------------------+</span><br></pre></td></tr></table></figure><h2 id="compute节点-2"><a href="#compute节点-2" class="headerlink" title="compute节点"></a>compute节点</h2><h3 id="先决条件-6"><a href="#先决条件-6" class="headerlink" title="先决条件"></a>先决条件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install lvm2 device-mapper-persistent-data -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务并设置开机自启动</span></span><br><span class="line">systemctl enable lvm2-lvmetad.service</span><br><span class="line">systemctl start lvm2-lvmetad.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建物理卷</span></span><br><span class="line">pvcreate /dev/sdb</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建 LVM 卷组</span></span><br><span class="line">vgcreate cinder-volumes /dev/sdb</span><br><span class="line"></span><br><span class="line">vi /etc/lvm/lvm.conf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在130行下插入</span></span><br><span class="line">filter = [ &quot;a/sda/&quot;, &quot;a/sdb/&quot;, &quot;r/.*/&quot;]   #filter过滤器中每个项目的开头都为&quot;a&quot;或&quot;r&quot;，用于接受或拒绝某个设备</span><br></pre></td></tr></table></figure><h3 id="安装配置组件-7"><a href="#安装配置组件-7" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-cinder targetcli python-keystone -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件 /etc/cinder/cinder.conf</span></span><br><span class="line">vi /etc/cinder/cinder.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">transport_url = rabbit://openstack:openstack123@controller</span><br><span class="line">auth_strategy = keystone</span><br><span class="line">my_ip = 192.168.10.10</span><br><span class="line">enabled_backends = lvm</span><br><span class="line">glance_api_servers = http://controller:9292</span><br><span class="line"></span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://cinder:cinder123@controller/cinder</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = http://controller:5000</span><br><span class="line">auth_url = http://controller:5000</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = cinder</span><br><span class="line">password = cinder</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /var/lib/cinder/tmp</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文末新增</span></span><br><span class="line">[lvm]</span><br><span class="line">volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver  #表示使用的卷驱动程序</span><br><span class="line">volume_group = cinder-volumes  #表示使用的卷驱动程序组名称</span><br><span class="line">iscsi_protocol = iscsi  #表示卷访问使用的 iSCSI 协议版本，这里是iSCSIv2(v1通常不在被使用)</span><br><span class="line">iscsi_helper = lioadm   #表示使用 Linux iSCSI Target 和 initiator 之间的 LIO 工具来管理 iSCSI 连接</span><br></pre></td></tr></table></figure><h3 id="启动服务并验证-2"><a href="#启动服务并验证-2" class="headerlink" title="启动服务并验证"></a>启动服务并验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务并设置为开机自启动</span></span><br><span class="line">systemctl start openstack-cinder-volume.service target.service</span><br><span class="line">systemctl enable openstack-cinder-volume.service target.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在控制节点验证</span></span><br><span class="line">openstack volume service list</span><br><span class="line">+------------------+-------------+------+---------+-------+----------------------------+</span><br><span class="line">| Binary           | Host        | Zone | Status  | State | Updated At                 |</span><br><span class="line">+------------------+-------------+------+---------+-------+----------------------------+</span><br><span class="line">| cinder-scheduler | controller  | nova | enabled | up    | 2024-03-12T08:47:44.000000 |</span><br><span class="line">| cinder-volume    | compute@lvm | nova | enabled | up    | 2024-03-12T08:47:38.000000 |</span><br><span class="line">+------------------+-------------+------+---------+-------+----------------------------+</span><br></pre></td></tr></table></figure><h1 id="Swift服务"><a href="#Swift服务" class="headerlink" title="Swift服务"></a>Swift服务</h1><h2 id="controller节点-7"><a href="#controller节点-7" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件-7"><a href="#先决条件-7" class="headerlink" title="先决条件"></a>先决条件</h3><p><strong>创建服务凭据</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建服务 密码为swift</span></span><br><span class="line">openstack user create --domain default --password-prompt swift</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加到admin中</span></span><br><span class="line">openstack role add --project service --user swift admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建服务实体</span></span><br><span class="line">openstack service create --name swift --description &quot;OpenStack Object Storage&quot; object-store</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建对象存储服务 API 端点</span></span><br><span class="line">openstack endpoint create --region RegionOne object-store public http://controller:8080/v1/AUTH_%\(project_id\)s</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne object-store internal http://controller:8080/v1/AUTH_%\(project_id\)s</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne object-store admin http://controller:8080/v1</span><br></pre></td></tr></table></figure><h3 id="安装配置组件-8"><a href="#安装配置组件-8" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-swift-proxy python-swiftclient python-keystoneclient python-keystonemiddleware memcached -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">从对象存储中获取代理服务配置文件 源存储库</span></span><br><span class="line">curl -o /etc/swift/proxy-server.conf https://opendev.org/openstack/swift/raw/branch/master/etc/proxy-server.conf-sample</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件 /etc/swift/proxy-server.conf</span></span><br><span class="line">vi /etc/swift/proxy-server.conf</span><br><span class="line">[DEFAULT]</span><br><span class="line">bind_port = 8080</span><br><span class="line">user = swift</span><br><span class="line">swift_dir = /etc/swift</span><br><span class="line"></span><br><span class="line">[pipeline:main]</span><br><span class="line">pipeline = catch_errors gatekeeper healthcheck proxy-logging cache container_sync bulk ratelimit authtoken keystoneauth container-quotas account-quotas slo dlo versioned_writes proxy-logging proxy-server</span><br><span class="line"></span><br><span class="line">[app:proxy-server]</span><br><span class="line">use = egg:swift#proxy</span><br><span class="line">account_autocreate = True</span><br><span class="line"></span><br><span class="line">[filter:keystoneauth]</span><br><span class="line">use = egg:swift#keystoneauth</span><br><span class="line">operator_roles = admin,user</span><br><span class="line"></span><br><span class="line">[filter:authtoken]</span><br><span class="line">paste.filter_factory = keystonemiddleware.auth_token:filter_factory</span><br><span class="line">www_authenticate_uri = http://controller:5000</span><br><span class="line">auth_url = http://controller:5000</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_id = default</span><br><span class="line">user_domain_id = default</span><br><span class="line">project_name = service</span><br><span class="line">username = swift</span><br><span class="line">password = swift</span><br><span class="line">delay_auth_decision = True</span><br><span class="line"></span><br><span class="line">[filter:cache]</span><br><span class="line">use = egg:swift#memcache</span><br><span class="line">memcache_servers = controller:11211</span><br></pre></td></tr></table></figure><h2 id="compute节点-3"><a href="#compute节点-3" class="headerlink" title="compute节点"></a>compute节点</h2><h3 id="先决条件-8"><a href="#先决条件-8" class="headerlink" title="先决条件"></a>先决条件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装支持实用程序包</span></span><br><span class="line">yum install xfsprogs rsync</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将设备格式化</span></span><br><span class="line">mkfs.xfs /dev/sdb</span><br><span class="line">mkfs.xfs /dev/sdc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建挂载点目录</span></span><br><span class="line">mkdir -p /srv/node/sdb</span><br><span class="line">mkdir -p /srv/node/sdc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查找新分区</span></span><br><span class="line">blkid</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑文件并向其添加内容 /etc/fstab</span></span><br><span class="line">UUID=&quot;&lt;UUID-from-output-above&gt;&quot; /srv/node/sdb xfs noatime 0 2</span><br><span class="line">UUID=&quot;&lt;UUID-from-output-above&gt;&quot; /srv/node/sdc xfs noatime 0 2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">挂载设备</span></span><br><span class="line">mount /srv/node/sdb</span><br><span class="line">mount /srv/node/sdc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建或编辑文件以包含以下内容 /etc/rsyncd.conf</span></span><br><span class="line">vi /etc/rsyncd.conf</span><br><span class="line"></span><br><span class="line">uid = swift</span><br><span class="line">gid = swift</span><br><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">address = 192.168.10.20</span><br><span class="line"></span><br><span class="line">[account]</span><br><span class="line">max connections = 2</span><br><span class="line">path = /srv/node/</span><br><span class="line">read only = False</span><br><span class="line">lock file = /var/lock/account.lock</span><br><span class="line"></span><br><span class="line">[container]</span><br><span class="line">max connections = 2</span><br><span class="line">path = /srv/node/</span><br><span class="line">read only = False</span><br><span class="line">lock file = /var/lock/container.lock</span><br><span class="line"></span><br><span class="line">[object]</span><br><span class="line">max connections = 2</span><br><span class="line">path = /srv/node/</span><br><span class="line">read only = False</span><br><span class="line">lock file = /var/lock/object.lock</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务并设置为开机自启动</span></span><br><span class="line">systemctl enable rsyncd.service</span><br><span class="line">systemctl start rsyncd.service</span><br></pre></td></tr></table></figure><h3 id="安装配置组件-9"><a href="#安装配置组件-9" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-swift-account openstack-swift-container openstack-swift-object -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取配置文件</span></span><br><span class="line">curl -o /etc/swift/account-server.conf https://opendev.org/openstack/swift/raw/branch/master/etc/account-server.conf-sample</span><br><span class="line">curl -o /etc/swift/container-server.conf https://opendev.org/openstack/swift/raw/branch/master/etc/container-server.conf-sample</span><br><span class="line">curl -o /etc/swift/object-server.conf https://opendev.org/openstack/swift/raw/branch/master/etc/object-server.conf-sample</span><br><span class="line"></span><br><span class="line">编辑配置文件 /etc/swift/account-server.conf</span><br><span class="line">vi /etc/swift/account-server.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">bind_ip = 192.168.10.20</span><br><span class="line">bind_port = 6202</span><br><span class="line">user = swift</span><br><span class="line">swift_dir = /etc/swift</span><br><span class="line">devices = /srv/node</span><br><span class="line">mount_check = True</span><br><span class="line"></span><br><span class="line">[pipeline:main]</span><br><span class="line">pipeline = healthcheck recon account-server</span><br><span class="line"></span><br><span class="line">[filter:recon]</span><br><span class="line">use = egg:swift#recon</span><br><span class="line">recon_cache_path = /var/cache/swift</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/swift/container-server.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">bind_ip = 192.168.10.20</span><br><span class="line">bind_port = 6201</span><br><span class="line">user = swift</span><br><span class="line">swift_dir = /etc/swift</span><br><span class="line">devices = /srv/node</span><br><span class="line">mount_check = True</span><br><span class="line"></span><br><span class="line">[pipeline:main]</span><br><span class="line">pipeline = healthcheck recon container-server</span><br><span class="line"></span><br><span class="line">[filter:recon]</span><br><span class="line">use = egg:swift#recon</span><br><span class="line">recon_cache_path = /var/cache/swift</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/swift/object-server.conf</span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">bind_ip = 192.168.10.20</span><br><span class="line">bind_port = 6200</span><br><span class="line">user = swift</span><br><span class="line">swift_dir = /etc/swift</span><br><span class="line">devices = /srv/node</span><br><span class="line">mount_check = True</span><br><span class="line"></span><br><span class="line">[pipeline:main]</span><br><span class="line">pipeline = healthcheck recon object-server</span><br><span class="line"></span><br><span class="line">[filter:recon]</span><br><span class="line">use = egg:swift#recon</span><br><span class="line">recon_cache_path = /var/cache/swift</span><br><span class="line">recon_lock_path = /var/lock</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建目录并赋予挂载目录权限</span></span><br><span class="line">chown -R swift:swift /srv/node</span><br><span class="line">mkdir -p /var/cache/swift</span><br><span class="line">chown -R root:swift /var/cache/swift</span><br><span class="line">chmod -R 775 /var/cache/swift</span><br></pre></td></tr></table></figure><h2 id="创建和分发initial-rings"><a href="#创建和分发initial-rings" class="headerlink" title="创建和分发initial rings"></a>创建和分发initial rings</h2><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/swift/</span><br><span class="line">swift-ring-builder account.builder create 10 3 1</span><br><span class="line">swift-ring-builder account.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.10 --port 6202 --device sdc --weight 100</span><br><span class="line">swift-ring-builder account.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.10 --port 6202 --device sdd --weight 100</span><br><span class="line">swift-ring-builder account.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.20 --port 6202 --device sdc --weight 100 </span><br><span class="line">swift-ring-builder account.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.20 --port 6202 --device sdd --weight 100  </span><br><span class="line">swift-ring-builder account.builder</span><br><span class="line">swift-ring-builder account.builder rebalance</span><br><span class="line"></span><br><span class="line">swift-ring-builder container.builder create 10 3 1</span><br><span class="line">swift-ring-builder container.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.10 --port 6201 --device sdc --weight 100</span><br><span class="line">swift-ring-builder container.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.10 --port 6201 --device sdd --weight 100</span><br><span class="line">swift-ring-builder container.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.20 --port 6201 --device sdc --weight 100</span><br><span class="line">swift-ring-builder container.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.20 --port 6201 --device sdd --weight 100</span><br><span class="line">swift-ring-builder container.builder</span><br><span class="line">swift-ring-builder container.builder rebalance</span><br><span class="line"></span><br><span class="line">swift-ring-builder object.builder create 10 3 1</span><br><span class="line">swift-ring-builder object.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.10 --port 6200 --device sdc --weight 100</span><br><span class="line">swift-ring-builder object.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.10 --port 6200 --device sdd --weight 100 </span><br><span class="line">swift-ring-builder object.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.20 --port 6200 --device sdc --weight 100</span><br><span class="line">swift-ring-builder object.builder add \</span><br><span class="line">  --region 1 --zone 1 --ip 192.168.10.20 --port 6200 --device sdd --weight 100</span><br><span class="line">swift-ring-builder object.builder</span><br><span class="line">swift-ring-builder object.builder rebalance</span><br><span class="line">scp swift.conf compute:/etc/swift/swift.conf</span><br><span class="line">chown -R root:swift /etc/swift</span><br><span class="line">systemctl enable openstack-swift-proxy.service memcached.service</span><br><span class="line">systemctl start openstack-swift-proxy.service memcached.service</span><br></pre></td></tr></table></figure><h3 id="compute"><a href="#compute" class="headerlink" title="compute"></a>compute</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">chown -R root:swift /etc/swift</span><br><span class="line">systemctl enable openstack-swift-account.service openstack-swift-account-auditor.service \</span><br><span class="line">  openstack-swift-account-reaper.service openstack-swift-account-replicator.service</span><br><span class="line">systemctl start openstack-swift-account.service openstack-swift-account-auditor.service \</span><br><span class="line">  openstack-swift-account-reaper.service openstack-swift-account-replicator.service</span><br><span class="line">systemctl enable openstack-swift-container.service \</span><br><span class="line">  openstack-swift-container-auditor.service openstack-swift-container-replicator.service \</span><br><span class="line">  openstack-swift-container-updater.service</span><br><span class="line">systemctl start openstack-swift-container.service \</span><br><span class="line">  openstack-swift-container-auditor.service openstack-swift-container-replicator.service \</span><br><span class="line">  openstack-swift-container-updater.service</span><br><span class="line">systemctl enable openstack-swift-object.service openstack-swift-object-auditor.service \</span><br><span class="line">  openstack-swift-object-replicator.service openstack-swift-object-updater.service</span><br><span class="line">systemctl start openstack-swift-object.service openstack-swift-object-auditor.service \</span><br><span class="line">  openstack-swift-object-replicator.service openstack-swift-object-updater.service</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">OpenStack—T版</summary>
    
    
    
    <category term="教程" scheme="http://lssheepcloud.cn/category/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="运维" scheme="http://lssheepcloud.cn/tag/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="OpenStack" scheme="http://lssheepcloud.cn/tag/OpenStack/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes流程图</title>
    <link href="http://lssheepcloud.cn/2023/12/12/Kubernetes%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    <id>http://lssheepcloud.cn/2023/12/12/Kubernetes%E6%B5%81%E7%A8%8B%E5%9B%BE/</id>
    <published>2023-12-12T06:34:14.000Z</published>
    <updated>2023-12-13T07:09:45.222Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Kubernets流程图"><a href="#Kubernets流程图" class="headerlink" title="Kubernets流程图"></a>Kubernets流程图</h3><p><img src="https://www.z4a.net/images/2023/12/12/k8s-.jpg" alt="k8s-.jpg"></p>]]></content>
    
    
    <summary type="html">Kubernetes概览</summary>
    
    
    
    <category term="流程图" scheme="http://lssheepcloud.cn/category/%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    
    
    <category term="Kubernetes" scheme="http://lssheepcloud.cn/tag/Kubernetes/"/>
    
    <category term="画图详解" scheme="http://lssheepcloud.cn/tag/%E7%94%BB%E5%9B%BE%E8%AF%A6%E8%A7%A3/"/>
    
  </entry>
  
</feed>
