<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CloudSheep&#39;s Blog</title>
  
  <subtitle>Sheep</subtitle>
  <link href="http://cloudsheep.xyz/atom.xml" rel="self"/>
  
  <link href="http://cloudsheep.xyz/"/>
  <updated>2023-12-21T09:57:37.122Z</updated>
  <id>http://cloudsheep.xyz/</id>
  
  <author>
    <name>sheep</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://cloudsheep.xyz/2023/12/21/Untitled/"/>
    <id>http://cloudsheep.xyz/2023/12/21/Untitled/</id>
    <published>2023-12-21T09:57:37.122Z</published>
    <updated>2023-12-21T09:57:37.122Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://cloudsheep.xyz/2023/12/14/hello-world/"/>
    <id>http://cloudsheep.xyz/2023/12/14/hello-world/</id>
    <published>2023-12-14T03:20:05.489Z</published>
    <updated>2023-12-10T06:48:56.102Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">new</span> <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">server</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">generate</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Hexo</summary>
    
    
    
    <category term="其他" scheme="http://cloudsheep.xyz/category/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="hello-world" scheme="http://cloudsheep.xyz/tag/hello-world/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack搭建</title>
    <link href="http://cloudsheep.xyz/2023/12/13/OpenStack%E6%90%AD%E5%BB%BA/"/>
    <id>http://cloudsheep.xyz/2023/12/13/OpenStack%E6%90%AD%E5%BB%BA/</id>
    <published>2023-12-13T06:22:33.000Z</published>
    <updated>2023-12-21T10:07:59.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主机规划"><a href="#主机规划" class="headerlink" title="主机规划"></a>主机规划</h1><table><thead><tr><th>主机名(hostname)</th><th>IP地址(双网卡(NAT,仅主机)）</th><th>规格</th></tr></thead><tbody><tr><td>controller(控制节点)</td><td>192.168.10.10</td><td>4核4g，硬盘100g</td></tr><tr><td>compute(计算节点)</td><td>192.168.10.20</td><td>4核4g，硬盘200g</td></tr></tbody></table><p><em>注：为了不影响后续操作，两台主机默认密码都是“000000”</em></p><h2 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h2><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname contrller</span><br><span class="line">bash          </span><br></pre></td></tr></table></figure><p><strong>compute节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname compute</span><br><span class="line">bash</span><br></pre></td></tr></table></figure><h2 id="主机映射"><a href="#主机映射" class="headerlink" title="主机映射"></a>主机映射</h2><p><strong>双节点(两个节点都需要执行)</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt;/etc/hosts &lt;&lt;EOF</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">192.168.10.10 controller</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">192.168.10.20 compute</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">EOF</span></span><br></pre></td></tr></table></figure><h2 id="关闭防火墙配置免密登录"><a href="#关闭防火墙配置免密登录" class="headerlink" title="关闭防火墙配置免密登录"></a>关闭防火墙配置免密登录</h2><p><strong>双节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; setenforce 0  #暂时关闭防火墙和seliunx(重启后会自启动)</span><br><span class="line">systemctl disable firewalld               #永久关闭防火墙(关闭开机自启动，需要手动开启)</span><br><span class="line"> </span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config #使用命令修改文件永久关闭seliunx</span><br><span class="line">or</span><br><span class="line">vi /etc/selinux/config                    #直接进入文件进行修改</span><br><span class="line">将&#x27;SELINUX=enforcing&#x27;改为&#x27;SELINUX=disabled&#x27;</span><br><span class="line">ssh-keygen -t rsa         #按三次回车</span><br><span class="line">ssh-copy-id controller    #第一次输入yes,第二次输入主机密码</span><br><span class="line">ssh-copy-id compute       #第一次输入yes,第二次输入主机密码</span><br></pre></td></tr></table></figure><h1 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h1><p><strong>双节点</strong></p><p><strong>安装 Chrony或NTP来实现（Chrony更适合虚拟化）</strong></p><h2 id="Chrony"><a href="#Chrony" class="headerlink" title="Chrony"></a>Chrony</h2><p><strong>双节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install chrony   #安装Chrony服务</span><br></pre></td></tr></table></figure><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/chrony.conf     #修改配置文件</span><br><span class="line">server 0.centos.pool.ntp.org iburst 改为 server ntp3.aliyun.com iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst #删除</span><br><span class="line">server 2.centos.pool.ntp.org iburst #删除</span><br><span class="line">server 3.centos.pool.ntp.org iburst #删除</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">allow 192.168.0.0/16 改为 allow all</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">local</span> stratum 10   <span class="comment">#去掉注释</span></span></span><br></pre></td></tr></table></figure><p><strong>compute</strong>节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/chrony.conf     #修改配置文件</span><br><span class="line">server 0.centos.pool.ntp.org iburst 改为 server controller iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst #删除</span><br><span class="line">server 2.centos.pool.ntp.org iburst #删除</span><br><span class="line">server 3.centos.pool.ntp.org iburst #删除</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">allow 192.168.0.0/16 改为 allow all</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">local</span> stratum 10   <span class="comment">#去掉注释</span></span></span><br></pre></td></tr></table></figure><p><strong>修改后的配置文件：</strong></p><p><img src="https://www.z4a.net/images/2023/12/15/2023-12-15-110620.png" alt="2023-12-15-110620.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart chronyd   #重启chrony服务</span><br><span class="line">systemctl enable chronyd    #设置为开机自启动</span><br><span class="line">systemctl status chronyd    #查看状态</span><br><span class="line">chronyc sources             #验证</span><br><span class="line">210 Number of sources = 1</span><br><span class="line">MS Name/IP address         Stratum Poll Reach LastRx Last sample               </span><br><span class="line">===============================================================================</span><br><span class="line">^* 203.107.6.88                  2   6    37    47    -63us[ -319us] +/-   41ms</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">左下角显示*号说明配置成功</span></span><br></pre></td></tr></table></figure><h2 id="NTP"><a href="#NTP" class="headerlink" title="NTP"></a>NTP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp       #安装ntp服务</span><br><span class="line"></span><br><span class="line">vi /etc/ntp.conf         #编辑配置文件</span><br><span class="line">server &lt;NTP服务器IP&gt;      #添加的内容(可参考下方注释内容)</span><br><span class="line"></span><br><span class="line">systemctl restart ntpd   #重启</span><br><span class="line">systemctl status ntpd    #查看状态</span><br><span class="line">systemctl enable ntpd    #设置为开机自启动</span><br><span class="line"></span><br><span class="line">ntpdate -q &lt;主机IP&gt;       #输入主机IP验证两台主机时间是否同步成功</span><br></pre></td></tr></table></figure><p><em>注：公共的ntp服务器</em></p><ul><li><em><a href="http://cn.pool.ntp.org/">cn.pool.ntp.org</a>（中国公共NTP服务器）</em></li><li><em><a href="http://pool.ntp.org/">pool.ntp.org</a>（全球公共NTP服务器）</em></li></ul><h1 id="安装软件包、数据库、消息队列、缓存"><a href="#安装软件包、数据库、消息队列、缓存" class="headerlink" title="安装软件包、数据库、消息队列、缓存"></a>安装软件包、数据库、消息队列、缓存</h1><h2 id="安装OpenStack软件包"><a href="#安装OpenStack软件包" class="headerlink" title="安装OpenStack软件包"></a>安装OpenStack软件包</h2><p><strong>双节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install centos-release-openstack-train    #启用OpenStack存储库</span><br><span class="line">yum upgrade                                      #升级内核(CentOS7以上版本可以不用)</span><br><span class="line">yum -y install python-openstackclient            #安装OpenStack客户端</span><br><span class="line">yum -y install openstack-selinux                 #服务策略</span><br></pre></td></tr></table></figure><h2 id="安装SQL数据库"><a href="#安装SQL数据库" class="headerlink" title="安装SQL数据库"></a>安装SQL数据库</h2><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mariadb mariadb-server python2-PyMySQL      #安装组件</span><br><span class="line"></span><br><span class="line">vi /etc/my.cnf.d/openstack.cnf                             #编辑配置文件</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加以下内容</span></span><br><span class="line">[mysqld]</span><br><span class="line">bind-address = 192.168.10.10                               #改为自己的主机IP</span><br><span class="line"></span><br><span class="line">default-storage-engine = innodb</span><br><span class="line">innodb_file_per_table = on</span><br><span class="line">max_connections = 4096</span><br><span class="line">collation-server = utf8_general_ci</span><br><span class="line">character-set-server = utf8</span><br><span class="line"></span><br><span class="line">systemctl start mariadb.service                            #启动数据库</span><br><span class="line">systemctl enable mariadb.service                           #设置为为开机自启动</span><br><span class="line">mysql_secure_installation                                  #初始化</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第一次按回车</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第二次按Y设置初始密码000000</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第三次按Y</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第四次按n</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第五次按Y</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第六次按Y</span></span><br></pre></td></tr></table></figure><h2 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h2><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rabbitmq-server                         #安装软件包</span><br><span class="line">systemctl start rabbitmq-server.service                #启动服务</span><br><span class="line">systemctl enable rabbitmq-server.service               #设置为开机自启动</span><br><span class="line"></span><br><span class="line">rabbitmqctl add_user openstack openstack123            #创建用户,密码&#x27;openstack123&#x27;</span><br><span class="line">rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;   #添加权限允许用户进行配置、写入和读取访问</span><br></pre></td></tr></table></figure><h2 id="安装缓存"><a href="#安装缓存" class="headerlink" title="安装缓存"></a>安装缓存</h2><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install memcached python-memcached -y         #安装软件包</span><br><span class="line"></span><br><span class="line">vi /etc/sysconfig/memcached                       #编辑配置文件</span><br><span class="line">OPTIONS=&quot;-l 127.0.0.1,controller&quot;                 #更改现有行&quot;OPTIONS=&quot;-l 127.0.0.1&quot;</span><br><span class="line"></span><br><span class="line">systemctl statrt memcached.service                #启动服务</span><br><span class="line">systemctl enable memcached.service                #设置为开机自启动</span><br></pre></td></tr></table></figure><h2 id="安装etcd"><a href="#安装etcd" class="headerlink" title="安装etcd"></a>安装etcd</h2><p><em>从S版开始有，详情请参考<a href="https://docs.openstack.org/2023.2/">官网</a></em></p><p><strong>controller节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum -y install etcd             #安装软件包</span><br><span class="line"></span><br><span class="line">vi /etc/etcd/etcd.conf          #编辑配置文件(根据对应的选项进行修改)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[Member]</span></span><br><span class="line">ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="line">ETCD_LISTEN_PEER_URLS=&quot;http://&lt;controller节点IP&gt;:2380&quot;</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=&quot;http://&lt;controller节点IP&gt;:2379,http://127.0.0.1:2379&quot;</span><br><span class="line">ETCD_NAME=&quot;controller&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://&lt;controller节点IP&gt;:2380&quot;</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;http://&lt;controller节点IP&gt;:2379&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER=&quot;controller=http://&lt;controller节点IP&gt;&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster-01&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;</span><br><span class="line"></span><br><span class="line">systemctl start etcd            #启动服务</span><br><span class="line">systemctl enable etcd           #设置为开机自启动</span><br><span class="line">etcdctl cluster-health          #验证(输出以下结果表示配置成功)</span><br><span class="line">member 4a1ad6ae1797e6ea is healthy: got healthy result from http://&lt;controller节点IP&gt;:2379</span><br></pre></td></tr></table></figure><h1 id="Keystone服务"><a href="#Keystone服务" class="headerlink" title="Keystone服务"></a>Keystone服务</h1><h2 id="controller节点"><a href="#controller节点" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><p><strong>创建数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入数据库</span></span><br><span class="line">mysql -uroot -p000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建数据库keystone</span></span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE keystone;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">赋予权限(keystone123为密码)</span></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;localhost&#x27; \</span><br><span class="line">IDENTIFIED BY &#x27;keystone123&#x27;;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;%&#x27; \</span><br><span class="line">IDENTIFIED BY &#x27;keystone123&#x27;;</span><br></pre></td></tr></table></figure><p><em>sql语句一定要有  ;  号结尾</em></p><h3 id="安装配置组件"><a href="#安装配置组件" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum install openstack-keystone httpd mod_wsgi -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件</span></span><br><span class="line">vi /etc/keystone/keystone.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找到需要修改的部分添加内容,查找方法(:/\查找的内容)</span></span><br><span class="line">[database]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">connection = mysql+pymysql://keystone:keystone123@controller/keystone   #直接添加</span><br><span class="line">[token]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">provider = fernet   #直接添加</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">同步数据库</span></span><br><span class="line">su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">初始化 Fernet 密钥存储库</span></span><br><span class="line">keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone</span><br><span class="line">keystone-manage credential_setup --keystone-user keystone --keystone-group keystone</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">初始化 Keystone 系统，并创建第一个管理员用户</span></span><br><span class="line">keystone-manage  bootstrap --bootstrap-password admin --bootstrap-admin-url http://controller:5000/v3/ --bootstrap-internal-url http://controller:5000/v3/ --bootstrap-public-url http://controller:5000/v3/ --bootstrap-region-id RegionOne </span><br></pre></td></tr></table></figure><h3 id="配置HTTP服务器"><a href="#配置HTTP服务器" class="headerlink" title="配置HTTP服务器"></a>配置HTTP服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件</span></span><br><span class="line">vi /etc/httpd/conf/httpd.conf</span><br><span class="line">ServerName controller   #添加这一行</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建指向文件的链接</span></span><br><span class="line">ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start httpd.service</span><br><span class="line">systemctl enable httpd.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建环境变量脚本添加以下内容</span></span><br><span class="line">vi admin.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">export OS_USERNAME=admin  #设置管理员用户的用户名为&quot;admin&quot;</span><br><span class="line">export OS_PASSWORD=admin  #设置管理员用户的密码为&quot;admin&quot;</span><br><span class="line">export OS_PROJECT_NAME=admin  #设置管理员用户所在的项目为&quot;admin&quot;</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default  #设置管理员用户所在域的名称为&quot;Default&quot;</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default  #设置管理员用户所在项目的域的名称为&quot;Default&quot;</span><br><span class="line">export OS_AUTH_URL=http://controller:5000/v3  #设置OpenStack的认证URL为&quot;http://controller:5000/v3&quot;</span><br><span class="line">export OS_IDENTITY_API_VERSION=3  #设置OpenStack的身份认证API版本为&quot;3&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动脚本</span></span><br><span class="line">soucre admin.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证</span></span><br><span class="line">openstack endpoint list</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</span><br><span class="line">| ID                               | Region    | Service Name | Service Type | Enabled | Interface | URL                        |</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</span><br><span class="line">| 5c4d1897030749209c3a6f22975ec618 | RegionOne | keystone     | identity     | True    | admin     | http://controller:5000/v3/ |</span><br><span class="line">| 67e3604466c14e698b0efd7f94e66288 | RegionOne | keystone     | identity     | True    | public    | http://controller:5000/v3/ |</span><br><span class="line">| 70ac89874ddf4a238699d73d05d8bb15 | RegionOne | keystone     | identity     | True    | internal  | http://controller:5000/v3/ |</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</span><br></pre></td></tr></table></figure><h3 id="创建域、项目、用户和角色"><a href="#创建域、项目、用户和角色" class="headerlink" title="创建域、项目、用户和角色"></a>创建域、项目、用户和角色</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个名为<span class="string">&quot;Example&quot;</span>的域</span></span><br><span class="line">openstack domain create --description &quot;An Example Domain&quot; example</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在名为 default 的域下创建名为 service 的项目</span></span><br><span class="line">openstack project create --domain default --description &quot;Service Project&quot; service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在 default 域下创建项目 myproject (创建其他用户时,不需要重复该步骤)</span></span><br><span class="line">openstack project create --domain default --description &quot;Demo Project&quot; myproject</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建用户 myuser (需要设置密码,统一为myuser)</span></span><br><span class="line">openstack user create --domain default --password-prompt myuser</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建角色 myrole</span></span><br><span class="line">openstack role create myrole</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将角色添加到项目和用户 myrolemyprojectmyuser</span></span><br><span class="line">openstack role add --project myproject --user myuser myrole</span><br></pre></td></tr></table></figure><p><em>注：重复以上步骤可创建多个项目和用户</em></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">取消设置临时变量和环境变量 OS_AUTH_URLOS_PASSWORD</span></span><br><span class="line">unset OS_AUTH_URL OS_PASSWORD</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要输入admin密码(需要输入两次)</span></span><br><span class="line">openstack --os-auth-url http://controller:5000/v3 \</span><br><span class="line">  --os-project-domain-name Default --os-user-domain-name Default \</span><br><span class="line">  --os-project-name admin --os-username admin token issue</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要输入myuser密码(需要输入两次)</span></span><br><span class="line">openstack --os-auth-url http://controller:5000/v3 \</span><br><span class="line">  --os-project-domain-name Default --os-user-domain-name Default \</span><br><span class="line">  --os-project-name myproject --os-username myuser token issue</span><br></pre></td></tr></table></figure><h3 id="创建-OpenStack-客户端环境脚本"><a href="#创建-OpenStack-客户端环境脚本" class="headerlink" title="创建 OpenStack 客户端环境脚本"></a>创建 OpenStack 客户端环境脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建编辑脚本 admin-openrc</span></span><br><span class="line">mkdir -p /etc/openstack/keystone</span><br><span class="line">vi /etc/openstack/keystone/admin-openrc</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=http://controller:5000/v3</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_IMAGE_API_VERSION=2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建编辑脚本myuser-openrc</span></span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=myproject</span><br><span class="line">export OS_USERNAME=myuser</span><br><span class="line">export OS_PASSWORD=myuser</span><br><span class="line">export OS_AUTH_URL=http://controller:5000/v3</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_IMAGE_API_VERSION=2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用脚本</span></span><br><span class="line">. /etc/openstack/keystone/admin-openrc.sh</span><br><span class="line">openstack token issue</span><br><span class="line">. /etc/openstack/keystone/myuser-openrc.sh</span><br><span class="line">openstack token issue</span><br></pre></td></tr></table></figure><h1 id="Glance服务"><a href="#Glance服务" class="headerlink" title="Glance服务"></a>Glance服务</h1><h2 id="controller节点-1"><a href="#controller节点-1" class="headerlink" title="controller节点"></a>controller节点</h2><h3 id="先决条件-1"><a href="#先决条件-1" class="headerlink" title="先决条件"></a>先决条件</h3><p><strong>创建数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入数据库</span></span><br><span class="line">mysql -uroot -p000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建数据库glance</span></span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE glance;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">授予对 glance 库的适当访问权限</span></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;glance123&#x27;;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;glance123&#x27;;</span><br></pre></td></tr></table></figure><p><strong>创建服务凭据</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取要访问的凭据</span></span><br><span class="line">. /etc/openstack/keystone/admin-openrc.sh </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在名为 default 的域下创建名为 glance 的用户,需要设置密码,密码统一为glance</span></span><br><span class="line">openstack user create --domain default --password-prompt glance </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将 glance 用户添加到 service 项目的 admin 角色中</span></span><br><span class="line">openstack role add --project service --user glance admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个名为glance的镜像服务</span></span><br><span class="line">openstack service create --name glance --description &#x27;Openstack Image&#x27; image</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证(查看服务<span class="built_in">id</span>列表)</span></span><br><span class="line">openstack service list</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">| ID                               | Name     | Type     |</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">| 97ebf2fe63a2402fbfaa36237a2101e1 | glance   | image    |</span><br><span class="line">| d14e27b4de294015912bcdd58d1fb449 | keystone | identity |</span><br><span class="line">+----------------------------------+----------+----------+ </span><br></pre></td></tr></table></figure><p><strong>创建API端点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为名为 glance 的镜像服务创建一个公共的终端，并指定 URL 地址为 http://controller:9292</span></span><br><span class="line">openstack endpoint create --region RegionOne image public http://controller:9292</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">为 glance 的镜像服务创建一个内部的终端，并指定 URL 地址为 http://controller:9292</span></span><br><span class="line">openstack endpoint create --region RegionOne image internal http://controller:9292 </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为 glance 的镜像服务创建一个管理员的终端，并指定 URL 地址为 http://controller:9292</span></span><br><span class="line">openstack endpoint create --region RegionOne image admin http://controller:9292 </span><br></pre></td></tr></table></figure><h3 id="安装配置组件-1"><a href="#安装配置组件-1" class="headerlink" title="安装配置组件"></a>安装配置组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装软件包</span></span><br><span class="line">yum -y install openstack-glance</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑配置文件(与配置keystone方法一样)</span></span><br><span class="line">vi /etc/glance/glance-api.conf</span><br><span class="line">[database]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">connection = mysql+pymysql://glance:glance123@controller/glance #连接数据库</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">www_authenticate_uri = http://controller:5000  #Keystone 的 HTTP 认证端点地址，用于与 Glance 进行认证和授权等操作</span><br><span class="line">auth_url = http://controller:5000  #Keystone 的认证端点地址</span><br><span class="line">memcached_servers = controller:11211  # Memcached 缓存服务器的地址和端口信息，用于缓存 Glance 服务的认证令牌和会话信息</span><br><span class="line">auth_type = password  #认证类型，一般为 password</span><br><span class="line">project_domain_name = Default  #项目域名，默认为 Default</span><br><span class="line">user_domain_name = Default  #用户域名，默认为 Default</span><br><span class="line">Project_name = service  #项目名称，用于指定访问 Keystone API 时使用的项目</span><br><span class="line">username = glance  #用户名，用于指定与 Keystone 进行身份验证时使用的用户名</span><br><span class="line">password = glance  #密码，用于与 Keystone 进行身份验证时使用的密码</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">flavor = keystone  #flavor 参数指定了 Glance 服务所使用的应用程序类型，取值为 keystone。这表示 Glance 服务是以 Keystone 身份认证服务为基础构建的，因此需要与之进行交互，以实现认证和授权等功能</span><br><span class="line"></span><br><span class="line">[glance_store]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">...</span></span><br><span class="line">stores = file,http  # Glance 所使用的存储后端类型，可以指定多个，用逗号进行分隔。常见的存储后端类型包括 file、http、https、rbd、swift、cinder 等</span><br><span class="line">default_store = file  #默认的存储后端类型，当一个新的镜像被创建时，将使用该存储后端来保存镜像数据</span><br><span class="line">filesystem_store_datadir = /var/lib/glance/images/  #文件系统存储类型的数据目录，用于指定文件系统存储后端保存镜像数据的路径</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">同步数据库</span></span><br><span class="line">su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl enable openstack-glance-api.service</span><br><span class="line">systemctl start openstack-glance-api.servic</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">OpenStack—T版</summary>
    
    
    
    <category term="教程" scheme="http://cloudsheep.xyz/category/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="OpenStack" scheme="http://cloudsheep.xyz/tag/OpenStack/"/>
    
    <category term="运维" scheme="http://cloudsheep.xyz/tag/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes流程图</title>
    <link href="http://cloudsheep.xyz/2023/12/12/Kubernetes%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    <id>http://cloudsheep.xyz/2023/12/12/Kubernetes%E6%B5%81%E7%A8%8B%E5%9B%BE/</id>
    <published>2023-12-12T06:34:14.000Z</published>
    <updated>2023-12-13T07:09:45.222Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Kubernets流程图"><a href="#Kubernets流程图" class="headerlink" title="Kubernets流程图"></a>Kubernets流程图</h3><p><img src="https://www.z4a.net/images/2023/12/12/k8s-.jpg" alt="k8s-.jpg"></p>]]></content>
    
    
    <summary type="html">Kubernetes概览</summary>
    
    
    
    <category term="流程图" scheme="http://cloudsheep.xyz/category/%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    
    
    <category term="Kubernetes" scheme="http://cloudsheep.xyz/tag/Kubernetes/"/>
    
    <category term="画图详解" scheme="http://cloudsheep.xyz/tag/%E7%94%BB%E5%9B%BE%E8%AF%A6%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack核心项目演变</title>
    <link href="http://cloudsheep.xyz/2023/12/12/OpenStack%E6%A0%B8%E5%BF%83%E9%A1%B9%E7%9B%AE%E6%BC%94%E5%8F%98/"/>
    <id>http://cloudsheep.xyz/2023/12/12/OpenStack%E6%A0%B8%E5%BF%83%E9%A1%B9%E7%9B%AE%E6%BC%94%E5%8F%98/</id>
    <published>2023-12-12T06:22:33.000Z</published>
    <updated>2023-12-13T07:33:05.010Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.z4a.net/images/2023/12/12/openstack-map-v20230501.jpg" alt="openstack-map-v20230501.jpg"></p>]]></content>
    
    
    <summary type="html">概览</summary>
    
    
    
    <category term="流程图" scheme="http://cloudsheep.xyz/category/%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    
    
    <category term="画图详解" scheme="http://cloudsheep.xyz/tag/%E7%94%BB%E5%9B%BE%E8%AF%A6%E8%A7%A3/"/>
    
    <category term="OpenStack" scheme="http://cloudsheep.xyz/tag/OpenStack/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-基础篇</title>
    <link href="http://cloudsheep.xyz/2023/10/25/MySQL/"/>
    <id>http://cloudsheep.xyz/2023/10/25/MySQL/</id>
    <published>2023-10-25T07:20:55.000Z</published>
    <updated>2023-12-10T06:20:22.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h1><h2 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#安装前检查系统是否自带mysql数据库</span></span></span><br><span class="line">rpm -qa | grep mysql</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#删除系统安装</span></span></span><br><span class="line">rpm -e mysql  #普通删除模式</span><br><span class="line">rpm -e --nodeps mysql  #强制删除（删除时，提示有依赖文件可使用该命令</span><br></pre></td></tr></table></figure><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><p><strong>使用yum命令安装mysql，参考<a href="https://dev.mysql.com/downloads/repo/yum/">官网</a></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#安装命令</span></span></span><br><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">yum update</span><br><span class="line">yum install mysql-server</span><br><span class="line"></span><br><span class="line">chown -R mysql:mysql /var/lib/mysql/  #权限设置</span><br><span class="line">mysqld --initialize  #初始化</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#启动mysql检查状态</span></span></span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> </p><p><em>如果我们是第一次启动 mysql 服务，mysql 服务器首先会进行初始化的配置。</em></p><p><em>此外,你也可以使用 MariaDB 代替，MariaDB 数据库管理系统是 MySQL 的一个分支，主要由开源社区在维护，采用 GPL 授权许可。开发这个分支的原因之一是：甲骨文公司收购了 MySQL 后，有将 MySQL 闭源的潜在风险，因此社区采用分支的方式来避开这个风险。</em></p><p><em>MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb-server mariadb </span><br><span class="line"></span><br><span class="line">mariadb数据库的相关命令是：</span><br><span class="line">systemctl start mariadb  #启动MariaDB</span><br><span class="line">systemctl stop mariadb  #停止MariaDB</span><br><span class="line">systemctl restart mariadb  #重启MariaDB</span><br><span class="line">systemctl enable mariadb  #设置开机启动</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin --version  #验证</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#该命令将输出以下结果，该结果基于你的系统信息：</span></span></span><br><span class="line">mysqladmin  Ver 8.42 Distrib 5.6.51, for Linux on x86_64</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##如果以上命令执行后未输出任何信息，说明你的mysql未安装成功</span></span></span><br><span class="line"></span><br><span class="line">mysql  #进入mysql</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#执行简单命令(&gt;提示符后面执行SQL命令)</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SHOW DATABASES;</span></span><br><span class="line">+----------+</span><br><span class="line">| Database |</span><br><span class="line">+----------+</span><br><span class="line">| mysql    |</span><br><span class="line">| test     |</span><br><span class="line">+----------+</span><br><span class="line">2 rows in set (0.13 sec)</span><br></pre></td></tr></table></figure><h3 id="创建密码"><a href="#创建密码" class="headerlink" title="创建密码"></a>创建密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root password &quot;000000&quot;  #创建root用户密码，密码为&quot;000000&quot;</span><br><span class="line">mysql -uroot -p000000  #进入数据库</span><br></pre></td></tr></table></figure><p><strong>注，：输入密码时密码不会显示，输入正确即可</strong></p><h1 id="管理MySQL"><a href="#管理MySQL" class="headerlink" title="管理MySQL"></a>管理MySQL</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep mysqld   #检查mysql服务器是否启动</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#启动mysql服务器</span></span></span><br><span class="line">cd /usr/bin</span><br><span class="line">./mysqld_safe &amp;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#关闭运行中的mysql服务器</span></span></span><br><span class="line">cd /usr/bin</span><br><span class="line">./mysqladmin -u root -p shutdown</span><br><span class="line">Enter password:******</span><br></pre></td></tr></table></figure><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p><strong>如果你要添加MySQL用户，你只需要在mysql数据库中的user表添加新用户即可。</strong></p><p><strong>实例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p000000  #进入mysql数据库</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#输出格式（添加用户）</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create user <span class="string">&#x27;user01&#x27;</span>@<span class="string">&#x27;mysql&#x27;</span> identified by<span class="string">&#x27;user01&#x27;</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec) </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#输出格式（删除用户）</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">drop user <span class="string">&#x27;user01&#x27;</span>@<span class="string">&#x27;mysql&#x27;</span>;    <span class="comment">#删除后需重新创建&#x27;user01&#x27;用户</span></span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#查看mysql用户</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> user,host from mysql.user;  <span class="comment">#查看所有用户</span></span></span><br><span class="line">+--------+-----------+</span><br><span class="line">| user   | host      |</span><br><span class="line">+--------+-----------+</span><br><span class="line">| root   | 127.0.0.1 |</span><br><span class="line">| root   | ::1       |</span><br><span class="line">|        | localhost |</span><br><span class="line">| root   | localhost |</span><br><span class="line">|        | mysql     |</span><br><span class="line">| root   | mysql     |</span><br><span class="line">| user01 | mysql     |</span><br><span class="line">+--------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> user();  <span class="comment">#查看当前用户</span></span></span><br><span class="line">+----------------+</span><br><span class="line">| user()         |</span><br><span class="line">+----------------+</span><br><span class="line">| root@localhost |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><h2 id="管理MySQL常用命令"><a href="#管理MySQL常用命令" class="headerlink" title="管理MySQL常用命令"></a>管理MySQL常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">use &lt;数据库名&gt;  #选中需要的数据库，使用该命令后所有Mysql命令都只针对该数据库</span><br><span class="line"></span><br><span class="line">SHOW DATABASES;  #列出mysql中所有数据库</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SHOW DATABASES;  <span class="comment">#实例</span></span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">SHOW TABLES;  #指定所有表，需要配合use命令指定数据库后使用</span><br><span class="line"></span><br><span class="line">实例:</span><br><span class="line">MariaDB [(none)]&gt; use mysql;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; show tables;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">24 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">SHOW COLUMNS FROM &lt;数据表名&gt;  #查看数据表属性等信息</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SHOW COLUMNS FROM db;</span></span><br><span class="line">+-----------------------+---------------+------+-----+---------+-------+</span><br><span class="line">| Field                 | Type          | Null | Key | Default | Extra |</span><br><span class="line">+-----------------------+---------------+------+-----+---------+-------+</span><br><span class="line">| Host                  | char(60)      | NO   | PRI |         |       |</span><br><span class="line">| Db                    | char(64)      | NO   | PRI |         |       |</span><br><span class="line">| User                  | char(16)      | NO   | PRI |         |       |</span><br><span class="line">| Select_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Insert_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Update_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Delete_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Create_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Drop_priv             | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Grant_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| References_priv       | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Index_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Alter_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Create_tmp_table_priv | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Lock_tables_priv      | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Create_view_priv      | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Show_view_priv        | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Create_routine_priv   | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Alter_routine_priv    | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Execute_priv          | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Event_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">| Trigger_priv          | enum(&#x27;N&#x27;,&#x27;Y&#x27;) | NO   |     | N       |       |</span><br><span class="line">+-----------------------+---------------+------+-----+---------+-------+</span><br><span class="line">22 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">SHOW INDEX FROM &lt;数据表名&gt;； #显示数据表的详细索引信息</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SHOW INDEX FROM db;  <span class="comment">#实例</span></span></span><br><span class="line">+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><br><span class="line">| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |</span><br><span class="line">+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><br><span class="line">| db    |          0 | PRIMARY  |            1 | Host        | A         |        NULL |     NULL | NULL   |      | BTREE      |         |               |</span><br><span class="line">| db    |          0 | PRIMARY  |            2 | Db          | A         |        NULL |     NULL | NULL   |      | BTREE      |         |               |</span><br><span class="line">| db    |          0 | PRIMARY  |            3 | User        | A         |           2 |     NULL | NULL   |      | BTREE      |         |               |</span><br><span class="line">| db    |          1 | User     |            1 | User        | A         |           1 |     NULL | NULL   |      | BTREE      |         |               |</span><br><span class="line">+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SHOW TABLE STATUS  FROM <span class="string">&#x27;xxx&#x27;</span>;   <span class="comment"># 显示数据库 xxx 中所有表的信息</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SHOW TABLE STATUS from RUNOOB LIKE <span class="string">&#x27;xxx%&#x27;</span>;     <span class="comment"># 表名以xxx开头的表的信息</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SHOW TABLE STATUS from RUNOOB LIKE <span class="string">&#x27;xxx%&#x27;</span>\G;   <span class="comment"># 加上 \G，查询结果按列打印</span></span></span><br></pre></td></tr></table></figure><h1 id="HPH语法"><a href="#HPH语法" class="headerlink" title="HPH语法"></a>HPH语法</h1><p><strong>MySQL可应用于多种用语言，如C，C++，JAVA，PHP等，其中，MySQL在PHP的web开发中应用的最广泛。</strong>(后续案例也基本采用PHP语言)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MySQL PHP函数格式:</span></span><br><span class="line">mysqli_function(value,value,...);  #语法结束后面一定要有符号结束！！</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">以上格式中 <span class="keyword">function</span>部分描述了mysql函数的功能，如:</span></span><br><span class="line"><span class="meta prompt_">mysqli_connect($</span><span class="language-bash">connect);  <span class="comment">#连接到数据库，其中connect包含了连接所需要的信息,例如主机名、用户名、数据库名和密码等。如果连接成功，该函数将返回一个连接对象，否则返回false。</span></span></span><br><span class="line"><span class="meta prompt_">mysqli_query($</span><span class="language-bash">connect,<span class="string">&quot;SQL 语句&quot;</span>);   <span class="comment">#执行SQL查询或者更新操作</span></span></span><br><span class="line">mysqli_fetch_array()    #从结果集对象中获取一行数据，并以数组的形式返回</span><br><span class="line">mysqli_close()     #关闭MySQL数据库连接，释放资源</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">retval = mysqli_function(value, [value,...]);</span></span><br><span class="line">if( !$retval )</span><br><span class="line">&#123;</span><br><span class="line">   die ( &quot;相关错误信息&quot; );</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">其他 MySQL 或 PHP 语句</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="MySQL连接方式"><a href="#MySQL连接方式" class="headerlink" title="MySQL连接方式"></a>MySQL连接方式</h1><h2 id="二进制连接"><a href="#二进制连接" class="headerlink" title="二进制连接"></a>二进制连接</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p000000</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">登陆成功后，显示结果如下:</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 14</span><br><span class="line">Server version: 5.5.68-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; quit;   #退出MySQL数据库</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><h2 id="PHP脚本连接"><a href="#PHP脚本连接" class="headerlink" title="PHP脚本连接"></a>PHP脚本连接</h2><p><strong>PHP 提供了 mysqli_connect() 函数来连接数据库。</strong></p><p><strong>该函数有 6 个参数，在成功链接到 MySQL 后返回连接标识，失败返回 FALSE 。</strong></p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqli_connect(host, username, password, dbname,port, socket);</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可以使用 PHP 的 mysqli_close() 函数来断开与 MySQL 数据库的链接</span></span><br><span class="line">bool mysqli_close ( mysqli $link )</span><br></pre></td></tr></table></figure><p><em><strong>提示：通常不需要使用 mysqli_close()，因为已打开的非持久连接会在脚本执行完毕后自动关闭。</strong></em></p><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>host</td><td>规定主机名或IP地址(可选)</td></tr><tr><td>usernsme</td><td>规定MySQL用户名(可选)</td></tr><tr><td>passwod</td><td>规定MySQL密码(可选)</td></tr><tr><td>dbname</td><td>规定默认使用的数据库(可选)</td></tr><tr><td>port</td><td>规定尝试连接到MySQL服务器的端口号(可选)</td></tr><tr><td>socket</td><td>规定socket或要使用的已命名pipe(可选)</td></tr></tbody></table><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">yum -y install php php-mysql   #安装PHP MySQL扩展</span><br><span class="line">vi mysql01.php  #创建PHP脚本</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">dbhost = <span class="string">&#x27;localhost&#x27;</span>;  // mysql服务器主机地址</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">dbuser = <span class="string">&#x27;root&#x27;</span>;            // mysql用户名</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">dbpass = <span class="string">&#x27;123456&#x27;</span>;          // mysql用户名密码</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">conn = mysqli_connect(<span class="variable">$dbhost</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>);</span></span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;Could not connect: &#x27; . mysqli_error());</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;数据库连接成功！&#x27;;</span><br><span class="line"><span class="meta prompt_">mysqli_close($</span><span class="language-bash">conn);</span></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">php mysql01.php   #运行PHP脚本</span><br></pre></td></tr></table></figure><h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><h2 id="MySQL创建"><a href="#MySQL创建" class="headerlink" title="MySQL创建"></a>MySQL创建</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p000000   #进入数据库</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database runoob;  #创建数据库，数据名runoob</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysqladmin -uroot -p000000 create RUNOOB   #使用mysqladmin创建</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证</span></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| RUNOOB             |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| runoob             |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="PHP脚本创建数据库"><a href="#PHP脚本创建数据库" class="headerlink" title="PHP脚本创建数据库"></a>PHP脚本创建数据库</h2><p><strong>一般使用mysqli_query函数来创建或者删除MySQL数据库，执行成功返回true否则返回false</strong></p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqli_query(connecttion,query,resultmode);</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>connecttion</td><td>规定要使用的MySQL连接(必需)</td></tr><tr><td>query</td><td>规定查询字符(必需)</td></tr><tr><td>resultmode</td><td>一个常量(可选) , 可以是下列值中的任意一个：                                                                                  ——  MYSQLI_USE_RESULT（如果需要检索大量数据，请使用这个）                                                                                                                   ——  MYSQLI_STORE_RESULT（默认）</td></tr></tbody></table><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vi runoob.php   #创建PHP脚本</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">dbhost = <span class="string">&#x27;localhost&#x27;</span>;  <span class="comment"># mysql服务器主机地址</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">dbuser = <span class="string">&#x27;root&#x27;</span>;            <span class="comment"># mysql用户名</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">dbpass = <span class="string">&#x27;000000&#x27;</span>;          <span class="comment"># mysql用户名密码</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">conn = mysqli_connect(<span class="variable">$dbhost</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>);</span></span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">  die(&#x27;连接错误: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;连接成功&lt;br /&gt;&#x27;;</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">sql = <span class="string">&#x27;CREATE DATABASE RUNOOB&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">retval = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql</span> );</span></span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&#x27;创建数据库失败: &#x27; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;数据库 RUNOOB 创建成功\n&quot;;</span><br><span class="line"><span class="meta prompt_">mysqli_close($</span><span class="language-bash">conn);</span></span><br><span class="line">?&gt;</span><br><span class="line"> </span><br><span class="line">php runoob.php     #执行脚本</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">MySQL的一些简单用法</summary>
    
    
    
    <category term="教程" scheme="http://cloudsheep.xyz/category/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="http://cloudsheep.xyz/tag/MySQL/"/>
    
    <category term="快速入门" scheme="http://cloudsheep.xyz/tag/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>dockerfile</title>
    <link href="http://cloudsheep.xyz/2023/10/20/Dockerfile/"/>
    <id>http://cloudsheep.xyz/2023/10/20/Dockerfile/</id>
    <published>2023-10-20T06:30:34.000Z</published>
    <updated>2023-12-19T07:28:53.793Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><h2 id="什么是dockerfile-dockerfile就是用来构建docker镜像的命令"><a href="#什么是dockerfile-dockerfile就是用来构建docker镜像的命令" class="headerlink" title="什么是dockerfile?dockerfile就是用来构建docker镜像的命令"></a>什么是dockerfile?dockerfile就是用来构建docker镜像的命令</h2><p><strong>一个完整的docker镜像由以下几步构成：</strong></p><p><strong>1.编写一个dockerfile文件</strong></p><p><strong>2.使用docker build命令构建成为一个镜像</strong></p><p><strong>3.使用docker run命令运行构建好的镜像</strong></p><p><strong>4.docker push命令发布镜像 （推荐DockerHub、阿里云镜像仓库）</strong></p><p><em>注：这里参考<a href="https://docs.docker.com/engine/reference/builder/">官方文档</a></em></p><h2 id="Dockerfile构建"><a href="#Dockerfile构建" class="headerlink" title="Dockerfile构建"></a>Dockerfile构建</h2><p><strong>构建dockerfile需要注意以下几点：</strong></p><p><strong>1.每个都要保留关键字（指令）且必须是大写字母！！！</strong></p><p><strong>2.文件的执行顺序是从上到下的</strong></p><p><strong>3.#表示注释（如果vim命令那么在虚拟机上是看不见中文的需要手动安装）</strong></p><p><strong>4.每一个指令都会创建并提交一个新的镜像层，并提交！！</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注：#vim安装命令</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">centos系统</span></span><br><span class="line">sudo yum install -y vim*</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ubatnu系统</span></span><br><span class="line">sudo apt install -y vim*</span><br></pre></td></tr></table></figure><h2 id="Dockerfile的命令"><a href="#Dockerfile的命令" class="headerlink" title="Dockerfile的命令"></a>Dockerfile的命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FORM              #基础镜像，一切从这里开始</span><br><span class="line">MAINNTATNER       #镜像构建人（姓名+邮箱）</span><br><span class="line">RUN               #镜像构建的时候需要运行的命令</span><br><span class="line">ADD               #步骤：tomcat镜像，这个tomcat压缩包！添加内容</span><br><span class="line">WORKDIR           #镜像的工作目录</span><br><span class="line">VOLUME            #挂载的目录</span><br><span class="line">EXPOSE            #指定暴露的端口号</span><br><span class="line">CMD               #指定这个容器启动的时候要运行的命令，只有最后一个会生效，可被替代</span><br><span class="line">ENTRYOINT         #指定这个容器启动时要运行的命令，可以追加命令</span><br><span class="line">ONBUILD           #当构建一个被继承dockerfile这个时候就会运行ONBUILD的指令。（触发指令）</span><br><span class="line">COPY              #类似ADD，将我们的文件拷贝到镜像中</span><br><span class="line">ENV               #构建的时候设置环境变量</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#创建一个自己的centos镜像##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1.编写dockerfile文件</span></span><br><span class="line">vi /home/dockerfile/dockerfile.centos  #打开vi编辑器</span><br><span class="line">FROM centos:7</span><br><span class="line">MAINTAINER cf&lt;kisssheep1557@163.com&gt;</span><br><span class="line"></span><br><span class="line">ENV MYPATH /usr/local/</span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"></span><br><span class="line">RUN yum -y install vim</span><br><span class="line">RUN yum -y inatall net-tools</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">CMD echo $MYPATH</span><br><span class="line">CMD echo &quot;-----end-----&quot;</span><br><span class="line">CMD /bin/bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2.通过编写好的文件构建镜像</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#命令：docker build -f /home/dockerfile/dockerfile文件路径 -t 镜像名：[tag]</span></span></span><br><span class="line">docker build -f dockerfile.centos -t mycentos:0.1 .</span><br><span class="line"></span><br><span class="line">Successfully built 285c2064af01</span><br><span class="line">Successfully tagged mycentos:0.1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">3.运行测试</span></span><br></pre></td></tr></table></figure><p><img src="https://www.z4a.net/images/2023/12/08/docker01.png" alt="docker01.png"></p><p><strong>对比</strong></p><p>官方给的基础镜像centos:7</p><p><img src="https://www.z4a.net/images/2023/12/08/docker02.png" alt="docker02.png"></p><p>自己创建的镜像mycentos:0.1</p><p><img src="https://www.z4a.net/images/2023/12/08/docker03.png" alt="docker03.png"></p><p><em>注：一般官方所给出的基础镜像是没有命令的，我们可以在官方给出的基础镜像的基础之上利用dockerfile来进行创建自己所需要的镜像</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#查看本地进行的变更历史</span></span></span><br><span class="line">docker history &lt;镜像ID&gt;</span><br></pre></td></tr></table></figure><p><img src="https://www.z4a.net/images/2023/12/08/docker04.png" alt="docker04.png"></p><h3 id="CMD和ENTRYPOIN的区别"><a href="#CMD和ENTRYPOIN的区别" class="headerlink" title="CMD和ENTRYPOIN的区别"></a>CMD和ENTRYPOIN的区别</h3><table><thead><tr><th>CMD</th><th>指定这个容器启动的时候要运行的命令，只有最后一个会生效，可以被代替</th></tr></thead><tbody><tr><td>ENTRYPOINT</td><td>指定这个容器启动的时候要运行的命令，可以追加命令</td></tr></tbody></table><h4 id="测试CMD"><a href="#测试CMD" class="headerlink" title="测试CMD"></a>测试CMD</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1.编写dockerfile文件</span></span><br><span class="line">vi /home/dockerfile/mydockerfile-cmd-test</span><br><span class="line"></span><br><span class="line">cat /home/dockerfile/mydockerfile-cmd-test</span><br><span class="line">FROM centos:7</span><br><span class="line">CMD [&quot;ls&quot;,&quot;-a&quot;]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2.构建镜像</span></span><br><span class="line">docker build -f /home/dockerfile/mydockerfile-cmd-test -t myimage:tag .</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">3.run命令运行，发现我们的“<span class="built_in">ls</span> -a<span class="string">&quot;命令生效、执行</span></span></span><br></pre></td></tr></table></figure><p><img src="https://www.z4a.net/images/2023/12/08/docker05.png" alt="docker05.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">4.追加一个<span class="string">&quot;-l&quot;</span>命令，构成<span class="string">&quot;ls -al&quot;</span>命令，发现报错</span></span><br><span class="line">[root@docker ~]# docker run 06f2cc65ea4a -l</span><br><span class="line">docker: Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: exec: &quot;-l&quot;: executable file not found in $PATH: unknown.</span><br><span class="line">ERRO[0000] error waiting for container:</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#原因:在CMD命令的情况下，&quot;-l&quot;替换了CMD[&quot;ls&quot;,&quot;a&quot;]命令而不是追加在里面，&quot;-l&quot;不是命令，所以报错！</span></span></span><br></pre></td></tr></table></figure><h4 id="测试ENTRYPOINT"><a href="#测试ENTRYPOINT" class="headerlink" title="测试ENTRYPOINT"></a>测试ENTRYPOINT</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1.编写dockerfile文件</span></span><br><span class="line">vi /home/dockerfile/mydockerfile-entrypoint-test</span><br><span class="line"></span><br><span class="line">cat /home/dockerfile/mydockerfile-entrypoint-test</span><br><span class="line">FORM centos:7</span><br><span class="line">ENTRYPOINT [&quot;ls&quot;,&quot;-a&quot;]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2.利用写好的dockerfile文件构建镜像</span></span><br><span class="line">docker build -f /home/dockerfile/mydockerfile-cmd-test -t myimages:tag .</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">3.run命令运行构建好的镜像，发现写入的<span class="string">&quot;ls -a&quot;</span>命令生效、执行</span></span><br></pre></td></tr></table></figure><p><img src="https://www.z4a.net/images/2023/12/08/docker06.png" alt="docker06.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">4.追加一个<span class="string">&quot;l&quot;</span>命令，构成<span class="string">&quot;ls -al&quot;</span>命令，发现命令生效并且被成功执行</span></span><br><span class="line">[root@docker ~]# docker run 5184c7d459a0 -l</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x.   1 root root     6 Oct  4 08:30 .</span><br><span class="line">drwxr-xr-x.   1 root root     6 Oct  4 08:30 ..</span><br><span class="line">-rwxr-xr-x.   1 root root     0 Oct  4 08:30 .dockerenv</span><br><span class="line">-rw-r--r--.   1 root root 12114 Nov 13  2020 anaconda-post.log</span><br><span class="line">lrwxrwxrwx.   1 root root     7 Nov 13  2020 bin -&gt; usr/bin</span><br><span class="line">drwxr-xr-x.   5 root root   340 Oct  4 08:30 dev</span><br><span class="line">drwxr-xr-x.   1 root root    66 Oct  4 08:30 etc</span><br><span class="line">drwxr-xr-x.   2 root root     6 Apr 11  2018 home</span><br><span class="line">lrwxrwxrwx.   1 root root     7 Nov 13  2020 lib -&gt; usr/lib</span><br><span class="line">lrwxrwxrwx.   1 root root     9 Nov 13  2020 lib64 -&gt; usr/lib64</span><br><span class="line">drwxr-xr-x.   2 root root     6 Apr 11  2018 media</span><br><span class="line">drwxr-xr-x.   2 root root     6 Apr 11  2018 mnt</span><br><span class="line">drwxr-xr-x.   2 root root     6 Apr 11  2018 opt</span><br><span class="line">dr-xr-xr-x. 131 root root     0 Oct  4 08:30 proc</span><br><span class="line">dr-xr-x---.   2 root root   114 Nov 13  2020 root</span><br><span class="line">drwxr-xr-x.  11 root root   148 Nov 13  2020 run</span><br><span class="line">lrwxrwxrwx.   1 root root     8 Nov 13  2020 sbin -&gt; usr/sbin</span><br><span class="line">drwxr-xr-x.   2 root root     6 Apr 11  2018 srv</span><br><span class="line">dr-xr-xr-x.  13 root root     0 Oct  4 08:13 sys</span><br><span class="line">drwxrwxrwt.   7 root root   132 Nov 13  2020 tmp</span><br><span class="line">drwxr-xr-x.  13 root root   155 Nov 13  2020 usr</span><br><span class="line">drwxr-xr-x.  18 root root   238 Nov 13  2020 var</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#原因：ENTRYPOINT命令的情况下，&quot;-l&quot;追加在ENTRYPOINT [&quot;1s&quot;，&quot;-a&quot;]命令后面，得到&quot;ls -al&quot;的命令，所以命令正常执行！（我们的追加命令，是直接拼接在我们的ENTRYPOINT命令的后面）</span></span></span><br></pre></td></tr></table></figure><h2 id="实战：制作tomcat镜像"><a href="#实战：制作tomcat镜像" class="headerlink" title="实战：制作tomcat镜像"></a>实战：制作tomcat镜像</h2><h3 id="1-准备好centos镜像，tomcat和jdk的压缩包-tomcat和jdk的压缩包安装地址放在下面"><a href="#1-准备好centos镜像，tomcat和jdk的压缩包-tomcat和jdk的压缩包安装地址放在下面" class="headerlink" title="1.准备好centos镜像，tomcat和jdk的压缩包(tomcat和jdk的压缩包安装地址放在下面)"></a>1.准备好centos镜像，tomcat和jdk的压缩包(tomcat和jdk的压缩包安装地址放在下面)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos:7   #下载centos基础镜像</span><br><span class="line"></span><br><span class="line">cd /home/dockerfile  #上传压缩包至该目录</span><br><span class="line">[root@docker dockerfile]# ls</span><br><span class="line">apache-tomcat-8.5.93.tar.gz  jdk-8u381-linux-x64.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>注：<a href="https://tomcat.apache.org/download-80.cgi">tomcat下载地址</a>和 <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">jdk下载地址</a></em></p><h3 id="2-解压，创建dockerfile文件"><a href="#2-解压，创建dockerfile文件" class="headerlink" title="2.解压，创建dockerfile文件"></a>2.解压，创建dockerfile文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">touch readme.txt   #创建readme.txt文件(可以理解为帮助文档)</span><br><span class="line"></span><br><span class="line">vi Dockerfile   #官方命名,build命令会自动查找该路径,不需要-f来确定路径</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#编写dockerfile文件##</span></span></span><br><span class="line">FROM centos:7</span><br><span class="line">MAINTAINER yqy&lt;kisssheep1557@163.com&gt; #构建人信息</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将刚才创建的readme文件复制到该目录下</span></span><br><span class="line">COPY readme.txt /usr/local/readme.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ADD会自动解压压缩包</span></span><br><span class="line">ADD jdk-8u381-linux-x64.tar.gz /usr/local  </span><br><span class="line">ADD apache-tomcat-8.5.93.tar.gz /usr/local</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行添加命令</span></span><br><span class="line">RUN yum install -y vim</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">工作目录</span></span><br><span class="line">ENV MYPATH /usr/local</span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置tomcat的运行环境</span></span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1.8.0_381</span><br><span class="line">ENV CLASS_PATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">ENV CATALINA_HOME /usr/local/apache-tomcat-8.5.93</span><br><span class="line">ENV CATALINA_BASH /usr/local/apache-tomcat-8.5.93</span><br><span class="line">ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">暴露端口</span></span><br><span class="line">EXPOSE 8080 </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动后监视日志输出</span></span><br><span class="line">CMD /usr/local/apache-tomcat-8.5.93/bin/startup.sh &amp;&amp; tail -F /usr/local/apa</span><br><span class="line">che-tomcat-8.5.93/bin/logs/catalina.out</span><br></pre></td></tr></table></figure><h3 id="3-构建镜像，启动，访问测试"><a href="#3-构建镜像，启动，访问测试" class="headerlink" title="3.构建镜像，启动，访问测试"></a>3.构建镜像，启动，访问测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">构建镜像</span></span><br><span class="line">docker build -t diytomcat .</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动镜像</span></span><br><span class="line">docker run -d -p 9090:8080 --name diytomcat01 diytomcat:latest</span><br><span class="line"></span><br><span class="line">docker run -d -p 3355:8080 --name yqytomcat -v /home/yqy/build/tomcat/test:/usr/local/apache-tomcat-8.5.93/webapps/test -v /home/yqy/build/tomcat/tomcatlog:/usr/local/apache-tomcat-8.5.93/logs diytomcat   #复杂版</span><br></pre></td></tr></table></figure><p><img src="https://www.z4a.net/images/2023/12/08/docker07.png" alt="docker07.png"></p><p><strong>访问成功！！！</strong></p><h3 id="4-发布项目"><a href="#4-发布项目" class="headerlink" title="4.发布项目"></a>4.发布项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在使用run命令打开容器时做了挂载卷，所以直接在本地<span class="built_in">test</span>文件下编写项目就可以了</span></span><br><span class="line">mkdir /home/yqy/build/tomcat/test/WEB-INF</span><br><span class="line">vi /home/yqy/build/tomcat/test/WEB-INF/web.xml</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee  http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /home/sywl/build/tomcat/test/index.jsp</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line"> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;hello,sywl&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">Hello World!&lt;br/&gt;</span><br><span class="line">&lt;%</span><br><span class="line">System.out.println(<span class="string">&quot;----my web test----&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Docker——dockerfile</summary>
    
    
    
    <category term="教程" scheme="http://cloudsheep.xyz/category/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="docker" scheme="http://cloudsheep.xyz/tag/docker/"/>
    
    <category term="进阶" scheme="http://cloudsheep.xyz/tag/%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>Docker</title>
    <link href="http://cloudsheep.xyz/2023/10/17/Docker/"/>
    <id>http://cloudsheep.xyz/2023/10/17/Docker/</id>
    <published>2023-10-17T13:12:44.000Z</published>
    <updated>2023-12-10T06:20:22.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><strong>Docker是一个开源的容器化平台，用于构建、部署和运行应用程序。它基于Linux容器（LXC）技术，提供了一种轻量级且可移植的虚拟化解决方案。</strong></p><p><strong>通过使用Docker，开发人员可以将应用程序及其所有依赖项打包到一个称为容器的独立单元中。这些容器可以在任何支持Docker的操作系统上运行，而不需要额外的配置。每个容器都是独立的、安全的，并且具有自己的文件系统、网络和进程空间，因此它们之间相互隔离。</strong></p><h2 id="Docker的主要优点包括："><a href="#Docker的主要优点包括：" class="headerlink" title="Docker的主要优点包括："></a>Docker的主要优点包括：</h2><ol><li>轻量级：相比传统的虚拟机，Docker容器占用更少的系统资源，启动更快。</li><li>可移植性：Docker容器可以在不同的环境中运行，无论是开发、测试还是生产环境。</li><li>简化部署：通过Docker，开发人员可以将应用程序及其依赖项作为一个整体进行打包，简化了应用程序的部署过程。</li><li>灵活性：Docker提供了灵活的管理和扩展功能，可以根据需求快速部署、停止、复制和迁移容器。</li><li>高效性：由于容器共享主机的操作系统内核，因此Docker在资源利用和性能方面非常高效。</li></ol><p>总之，Docker提供了一种简单、高效、可移植的容器化解决方案，使开发人员能够更轻松地构建、交付和运行应用程序。</p><h1 id="Docker——安装"><a href="#Docker——安装" class="headerlink" title="Docker——安装"></a>Docker——安装</h1><h2 id="Docker要求CentOS内核版本要高于3-10-CentOS7以上的内核版本不需要升级，除非有特定需求）"><a href="#Docker要求CentOS内核版本要高于3-10-CentOS7以上的内核版本不需要升级，除非有特定需求）" class="headerlink" title="Docker要求CentOS内核版本要高于3.10(CentOS7以上的内核版本不需要升级，除非有特定需求）"></a>Docker要求CentOS内核版本要高于3.10(CentOS7以上的内核版本不需要升级，除非有特定需求）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@dockeer ~]# uname -r   #查看系统内核版本</span><br><span class="line">3.10.0-1160.92.1.el7.x86_64 </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">内核升级方法</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装 ELRepo：ELRepo 是一个第三方软件仓库，提供了最新的内核版本。运行以下命令来安装 ELRepo：</span></span><br><span class="line">sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">sudo rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看可用内核版本：安装完成 ELRepo 后，可以使用以下命令查看可用的内核版本：</span></span><br><span class="line">sudo yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list available</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装新内核：选择一个你想要安装的内核版本，并使用以下命令进行安装（以 kernel-ml 为例）：</span></span><br><span class="line">sudo yum --enablerepo=elrepo-kernel install kernel-ml</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更新 GRUB 配置：安装完成后，需要更新 GRUB 配置文件，使系统能够启动新内核。运行以下命令更新 GRUB：</span></span><br><span class="line">sudo grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置默认启动内核：如果你想将新内核设置为默认启动，可以编辑 /etc/default/grub 文件，找到 GRUB_DEFAULT 行，并将其值设置为新内核的索引号（从 0 开始计数）。保存文件后，运行以下命令使更改生效：</span></span><br><span class="line">sudo grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启系统：完成以上步骤后，可以通过以下命令重启系统，使新内核生效：</span></span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p><strong>PS：文章后续都是基于Centos7.9镜像来操作的，如果有其他疑问请参考[官网](<a href="https://docs.docker.com/get-docker/">Get Docker | Docker Docs</a>)或者留言咨询</strong></p><h2 id="卸载旧版本-如果没有安装过docker就不需要执行这一步"><a href="#卸载旧版本-如果没有安装过docker就不需要执行这一步" class="headerlink" title="卸载旧版本(如果没有安装过docker就不需要执行这一步)"></a>卸载旧版本(如果没有安装过docker就不需要执行这一步)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@dockeer ~]# docker --version   #验证是否安装了docker,如果没有显示docker版本信息说明没有安装</span><br><span class="line"></span><br><span class="line">bash: docker: command not found</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">卸载命令</span></span><br><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h2 id="安装Docker所需要的一些工具包"><a href="#安装Docker所需要的一些工具包" class="headerlink" title="安装Docker所需要的一些工具包"></a>安装Docker所需要的一些工具包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><h2 id="建立Docker仓库-映射仓库地址"><a href="#建立Docker仓库-映射仓库地址" class="headerlink" title="建立Docker仓库 (映射仓库地址)"></a>建立Docker仓库 (映射仓库地址)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h2 id="安装docker引擎"><a href="#安装docker引擎" class="headerlink" title="安装docker引擎"></a>安装docker引擎</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装最新版本</span></span><br><span class="line">sudo yum -y install docker-ce docker-ce-cli containerd.io </span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装特定版本</span></span><br><span class="line">yum list docker-ce --showduplicates | sort -r    #安装存储库</span><br><span class="line"></span><br><span class="line">docker-ce.x86_64    3:24.0.0-1.el8    docker-ce-stable</span><br><span class="line">docker-ce.x86_64    3:23.0.6-1.el8    docker-ce-stable</span><br><span class="line">&lt;...&gt;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">返回的列表取决于启用的存储库，并且是特定的 到你的 CentOS 版本（在本例中由后缀指示）.e18</span></span><br><span class="line"></span><br><span class="line">sudo yum install docker-ce-VERSION_STRING docker-ce-cli-VERSION_STRING containerd.io docker-buildx-plugin docker-compose-plugin    #VERSION_STRING改为特定的版本号如20.10</span><br></pre></td></tr></table></figure><h2 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@dockeer ~]# systemctl  start docker  #启动docker</span><br><span class="line">[root@dockeer ~]# systemctl enable docker  #开机自启动</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br><span class="line">[root@dockeer ~]# docker --version       #查看docker版本</span><br><span class="line">Docker version 24.0.6, build ed223bc</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@dockeer ~]# docker run hello-world   #验证docker是否安装成功</span><br><span class="line">Unable to find image &#x27;hello-world:latest&#x27; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">719385e32844: Pull complete </span><br><span class="line">Digest: sha256:88ec0acaa3ec199d3b7eaf73588f4518c25f9d34f58ce9a0df68429c5af48e8d</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!  #显示该内容，说明安装成功</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta prompt_"> $ </span><span class="language-bash">docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><h1 id="Docker——镜像加速"><a href="#Docker——镜像加速" class="headerlink" title="Docker——镜像加速"></a>Docker——镜像加速</h1><p><strong>由于Docker Hub是在国外，导致我们在拉取镜像时会很慢或者拉取超时。</strong></p><p><strong>可以使用国内的镜像加速服务，例如：阿里云，清华，网易，中科大等。</strong></p><p><i class="fas fa-user-circle"></i>这里以阿里云为例：</p><p><strong>打开<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">阿里云镜像加速地址</a>并登录(阿里云新用户注册可以免费领取一个月的云服务器)</strong></p><p><strong>在左侧菜单中选择镜像加速器，根据自己的系统选择对应的操作文档</strong></p><p>可以通过修改daemon配置文件&#x2F;etc&#x2F;docker&#x2F;daemon.json来使用加速器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo mkdir -p /etc/docker   </span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://你的ID.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Docker——基础篇</summary>
    
    
    
    <category term="教程" scheme="http://cloudsheep.xyz/category/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="docker" scheme="http://cloudsheep.xyz/tag/docker/"/>
    
  </entry>
  
</feed>
